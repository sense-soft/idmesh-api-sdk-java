/*
 * IDMesh-Dev
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.4.7
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package cn.idmesh.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

import java.io.IOException;

import com.google.gson.Gson;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.util.HashSet;

import cn.idmesh.JSON;

/**
 * CreateAppReq
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class CreateAppReq {
  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private String type;

  public static final String SERIALIZED_NAME_DOMAIN_SN = "domain_sn";
  @SerializedName(SERIALIZED_NAME_DOMAIN_SN)
  private String domainSn;

  public static final String SERIALIZED_NAME_TEMPLATE_ID = "template_id";
  @SerializedName(SERIALIZED_NAME_TEMPLATE_ID)
  private String templateId;

  public static final String SERIALIZED_NAME_CATEGORY = "category";
  @SerializedName(SERIALIZED_NAME_CATEGORY)
  private String category;

  public static final String SERIALIZED_NAME_DESCR = "descr";
  @SerializedName(SERIALIZED_NAME_DESCR)
  private String descr;

  public static final String SERIALIZED_NAME_LOGO = "logo";
  @SerializedName(SERIALIZED_NAME_LOGO)
  private String logo;

  public static final String SERIALIZED_NAME_LOGIN_URL = "login_url";
  @SerializedName(SERIALIZED_NAME_LOGIN_URL)
  private String loginUrl;

  public static final String SERIALIZED_NAME_REDIRECT_URL = "redirect_url";
  @SerializedName(SERIALIZED_NAME_REDIRECT_URL)
  private String redirectUrl;

  public static final String SERIALIZED_NAME_LOGOUT_URL = "logout_url";
  @SerializedName(SERIALIZED_NAME_LOGOUT_URL)
  private String logoutUrl;

  public static final String SERIALIZED_NAME_SUB_ACCOUNT_POLICY = "sub_account_policy";
  @SerializedName(SERIALIZED_NAME_SUB_ACCOUNT_POLICY)
  private String subAccountPolicy;

  public static final String SERIALIZED_NAME_SYS_EXT_PROPS = "sys_ext_props";
  @SerializedName(SERIALIZED_NAME_SYS_EXT_PROPS)
  private Object sysExtProps;

  public static final String SERIALIZED_NAME_FREE_EXT_PROPS = "free_ext_props";
  @SerializedName(SERIALIZED_NAME_FREE_EXT_PROPS)
  private Object freeExtProps;

  public static final String SERIALIZED_NAME_PROTOCOL_TYPE = "protocol_type";
  @SerializedName(SERIALIZED_NAME_PROTOCOL_TYPE)
  private String protocolType;

  public static final String SERIALIZED_NAME_PROTOCOL_PROP = "protocol_prop";
  @SerializedName(SERIALIZED_NAME_PROTOCOL_PROP)
  private CreateAppReqProtocolProp protocolProp;

  public static final String SERIALIZED_NAME_CONFIG_PROP = "config_prop";
  @SerializedName(SERIALIZED_NAME_CONFIG_PROP)
  private CreateAppReqConfigProp configProp;

  public static final String SERIALIZED_NAME_TEMPLATE_PARAMS = "template_params";
  @SerializedName(SERIALIZED_NAME_TEMPLATE_PARAMS)
  private CreateAppReqTemplateParams templateParams;

  public CreateAppReq() {
  }
   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nonnull
  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }

   /**
   * 1，自建应用，2模板应用（市场应用）
   * @return type
  **/
  @javax.annotation.Nonnull
  public String getType() {
    return type;
  }


  public void setType(String type) {
    this.type = type;
  }

   /**
   * 域名
   * @return domainSn
  **/
  @javax.annotation.Nonnull
  public String getDomainSn() {
    return domainSn;
  }


  public void setDomainSn(String domainSn) {
    this.domainSn = domainSn;
  }

   /**
   * 不填写则代表自建应用
   * @return templateId
  **/
  @javax.annotation.Nullable
  public String getTemplateId() {
    return templateId;
  }


  public void setTemplateId(String templateId) {
    this.templateId = templateId;
  }

   /**
   * 1 标准web应用，2单页web应用，3客户端应用，4后端服务
   * @return category
  **/
  @javax.annotation.Nonnull
  public String getCategory() {
    return category;
  }


  public void setCategory(String category) {
    this.category = category;
  }

   /**
   * Get descr
   * @return descr
  **/
  @javax.annotation.Nullable
  public String getDescr() {
    return descr;
  }


  public void setDescr(String descr) {
    this.descr = descr;
  }

   /**
   * 格式为：http://ip:port/logo.png
   * @return logo
  **/
  @javax.annotation.Nullable
  public String getLogo() {
    return logo;
  }


  public void setLogo(String logo) {
    this.logo = logo;
  }

   /**
   * Get loginUrl
   * @return loginUrl
  **/
  @javax.annotation.Nullable
  public String getLoginUrl() {
    return loginUrl;
  }


  public void setLoginUrl(String loginUrl) {
    this.loginUrl = loginUrl;
  }

   /**
   * Get redirectUrl
   * @return redirectUrl
  **/
  @javax.annotation.Nullable
  public String getRedirectUrl() {
    return redirectUrl;
  }


  public void setRedirectUrl(String redirectUrl) {
    this.redirectUrl = redirectUrl;
  }

   /**
   * Get logoutUrl
   * @return logoutUrl
  **/
  @javax.annotation.Nullable
  public String getLogoutUrl() {
    return logoutUrl;
  }


  public void setLogoutUrl(String logoutUrl) {
    this.logoutUrl = logoutUrl;
  }

   /**
   * 1启用，0不启用，启用后单点登录返回
   * @return subAccountPolicy
  **/
  @javax.annotation.Nullable
  public String getSubAccountPolicy() {
    return subAccountPolicy;
  }


  public void setSubAccountPolicy(String subAccountPolicy) {
    this.subAccountPolicy = subAccountPolicy;
  }

   /**
   * kv字典数据
   * @return sysExtProps
  **/
  @javax.annotation.Nullable
  public Object getSysExtProps() {
    return sysExtProps;
  }


  public void setSysExtProps(Object sysExtProps) {
    this.sysExtProps = sysExtProps;
  }

   /**
   * kv字典数据
   * @return freeExtProps
  **/
  @javax.annotation.Nonnull
  public Object getFreeExtProps() {
    return freeExtProps;
  }


  public void setFreeExtProps(Object freeExtProps) {
    this.freeExtProps = freeExtProps;
  }

   /**
   * 默认 oidc
   * @return protocolType
  **/
  @javax.annotation.Nullable
  public String getProtocolType() {
    return protocolType;
  }


  public void setProtocolType(String protocolType) {
    this.protocolType = protocolType;
  }

   /**
   * Get protocolProp
   * @return protocolProp
  **/
  @javax.annotation.Nullable
  public CreateAppReqProtocolProp getProtocolProp() {
    return protocolProp;
  }


  public void setProtocolProp(CreateAppReqProtocolProp protocolProp) {
    this.protocolProp = protocolProp;
  }

   /**
   * Get configProp
   * @return configProp
  **/
  @javax.annotation.Nullable
  public CreateAppReqConfigProp getConfigProp() {
    return configProp;
  }


  public void setConfigProp(CreateAppReqConfigProp configProp) {
    this.configProp = configProp;
  }

   /**
   * Get templateParams
   * @return templateParams
  **/
  @javax.annotation.Nullable
  public CreateAppReqTemplateParams getTemplateParams() {
    return templateParams;
  }


  public void setTemplateParams(CreateAppReqTemplateParams templateParams) {
    this.templateParams = templateParams;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateAppReq createAppReq = (CreateAppReq) o;
    return Objects.equals(this.name, createAppReq.name) &&
        Objects.equals(this.type, createAppReq.type) &&
        Objects.equals(this.domainSn, createAppReq.domainSn) &&
        Objects.equals(this.templateId, createAppReq.templateId) &&
        Objects.equals(this.category, createAppReq.category) &&
        Objects.equals(this.descr, createAppReq.descr) &&
        Objects.equals(this.logo, createAppReq.logo) &&
        Objects.equals(this.loginUrl, createAppReq.loginUrl) &&
        Objects.equals(this.redirectUrl, createAppReq.redirectUrl) &&
        Objects.equals(this.logoutUrl, createAppReq.logoutUrl) &&
        Objects.equals(this.subAccountPolicy, createAppReq.subAccountPolicy) &&
        Objects.equals(this.sysExtProps, createAppReq.sysExtProps) &&
        Objects.equals(this.freeExtProps, createAppReq.freeExtProps) &&
        Objects.equals(this.protocolType, createAppReq.protocolType) &&
        Objects.equals(this.protocolProp, createAppReq.protocolProp) &&
        Objects.equals(this.configProp, createAppReq.configProp) &&
        Objects.equals(this.templateParams, createAppReq.templateParams);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, type, domainSn, templateId, category, descr, logo, loginUrl, redirectUrl, logoutUrl, subAccountPolicy, sysExtProps, freeExtProps, protocolType, protocolProp, configProp, templateParams);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateAppReq {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    domainSn: ").append(toIndentedString(domainSn)).append("\n");
    sb.append("    templateId: ").append(toIndentedString(templateId)).append("\n");
    sb.append("    category: ").append(toIndentedString(category)).append("\n");
    sb.append("    descr: ").append(toIndentedString(descr)).append("\n");
    sb.append("    logo: ").append(toIndentedString(logo)).append("\n");
    sb.append("    loginUrl: ").append(toIndentedString(loginUrl)).append("\n");
    sb.append("    redirectUrl: ").append(toIndentedString(redirectUrl)).append("\n");
    sb.append("    logoutUrl: ").append(toIndentedString(logoutUrl)).append("\n");
    sb.append("    subAccountPolicy: ").append(toIndentedString(subAccountPolicy)).append("\n");
    sb.append("    sysExtProps: ").append(toIndentedString(sysExtProps)).append("\n");
    sb.append("    freeExtProps: ").append(toIndentedString(freeExtProps)).append("\n");
    sb.append("    protocolType: ").append(toIndentedString(protocolType)).append("\n");
    sb.append("    protocolProp: ").append(toIndentedString(protocolProp)).append("\n");
    sb.append("    configProp: ").append(toIndentedString(configProp)).append("\n");
    sb.append("    templateParams: ").append(toIndentedString(templateParams)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("name");
    openapiFields.add("type");
    openapiFields.add("domain_sn");
    openapiFields.add("template_id");
    openapiFields.add("category");
    openapiFields.add("descr");
    openapiFields.add("logo");
    openapiFields.add("login_url");
    openapiFields.add("redirect_url");
    openapiFields.add("logout_url");
    openapiFields.add("sub_account_policy");
    openapiFields.add("sys_ext_props");
    openapiFields.add("free_ext_props");
    openapiFields.add("protocol_type");
    openapiFields.add("protocol_prop");
    openapiFields.add("config_prop");
    openapiFields.add("template_params");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("name");
    openapiRequiredFields.add("type");
    openapiRequiredFields.add("domain_sn");
    openapiRequiredFields.add("category");
    openapiRequiredFields.add("free_ext_props");
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to CreateAppReq
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CreateAppReq.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CreateAppReq is not found in the empty JSON string", CreateAppReq.openapiRequiredFields.toString()));
        }
      }


      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : CreateAppReq.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (!jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if (!jsonObj.get("type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("type").toString()));
      }
      if (!jsonObj.get("domain_sn").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `domain_sn` to be a primitive type in the JSON string but got `%s`", jsonObj.get("domain_sn").toString()));
      }
      if ((jsonObj.get("template_id") != null && !jsonObj.get("template_id").isJsonNull()) && !jsonObj.get("template_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `template_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("template_id").toString()));
      }
      if (!jsonObj.get("category").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `category` to be a primitive type in the JSON string but got `%s`", jsonObj.get("category").toString()));
      }
      if ((jsonObj.get("descr") != null && !jsonObj.get("descr").isJsonNull()) && !jsonObj.get("descr").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `descr` to be a primitive type in the JSON string but got `%s`", jsonObj.get("descr").toString()));
      }
      if ((jsonObj.get("logo") != null && !jsonObj.get("logo").isJsonNull()) && !jsonObj.get("logo").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `logo` to be a primitive type in the JSON string but got `%s`", jsonObj.get("logo").toString()));
      }
      if ((jsonObj.get("login_url") != null && !jsonObj.get("login_url").isJsonNull()) && !jsonObj.get("login_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `login_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("login_url").toString()));
      }
      if ((jsonObj.get("redirect_url") != null && !jsonObj.get("redirect_url").isJsonNull()) && !jsonObj.get("redirect_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `redirect_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("redirect_url").toString()));
      }
      if ((jsonObj.get("logout_url") != null && !jsonObj.get("logout_url").isJsonNull()) && !jsonObj.get("logout_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `logout_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("logout_url").toString()));
      }
      if ((jsonObj.get("sub_account_policy") != null && !jsonObj.get("sub_account_policy").isJsonNull()) && !jsonObj.get("sub_account_policy").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sub_account_policy` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sub_account_policy").toString()));
      }
      if ((jsonObj.get("protocol_type") != null && !jsonObj.get("protocol_type").isJsonNull()) && !jsonObj.get("protocol_type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `protocol_type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("protocol_type").toString()));
      }
      // validate the optional field `protocol_prop`
      if (jsonObj.get("protocol_prop") != null && !jsonObj.get("protocol_prop").isJsonNull()) {
        CreateAppReqProtocolProp.validateJsonElement(jsonObj.get("protocol_prop"));
      }
      // validate the optional field `config_prop`
      if (jsonObj.get("config_prop") != null && !jsonObj.get("config_prop").isJsonNull()) {
        CreateAppReqConfigProp.validateJsonElement(jsonObj.get("config_prop"));
      }
      // validate the optional field `template_params`
      if (jsonObj.get("template_params") != null && !jsonObj.get("template_params").isJsonNull()) {
        CreateAppReqTemplateParams.validateJsonElement(jsonObj.get("template_params"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CreateAppReq.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CreateAppReq' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CreateAppReq> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CreateAppReq.class));

       return (TypeAdapter<T>) new TypeAdapter<CreateAppReq>() {
           @Override
           public void write(JsonWriter out, CreateAppReq value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CreateAppReq read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of CreateAppReq given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of CreateAppReq
  * @throws IOException if the JSON string is invalid with respect to CreateAppReq
  */
  public static CreateAppReq fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CreateAppReq.class);
  }

 /**
  * Convert an instance of CreateAppReq to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

