/*
 * IDMesh-Dev
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.4.7
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package cn.idmesh.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

import java.io.IOException;

import com.google.gson.Gson;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.util.HashSet;

import cn.idmesh.JSON;

/**
 * key: 协议名称 value: 协议配置，格式: {\&quot;config\&quot;: &lt;配置内容json内容&gt;}
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class ModifyAppReqProtocols {
  public static final String SERIALIZED_NAME_OIDC = "oidc";
  @SerializedName(SERIALIZED_NAME_OIDC)
  private ModifyAppReqProtocolsOidc oidc;

  public static final String SERIALIZED_NAME_SAML = "saml";
  @SerializedName(SERIALIZED_NAME_SAML)
  private ModifyAppReqProtocolsOidc saml;

  public static final String SERIALIZED_NAME_OATUH2 = "oatuh2";
  @SerializedName(SERIALIZED_NAME_OATUH2)
  private ModifyAppReqProtocolsOidc oatuh2;

  public static final String SERIALIZED_NAME_SXP = "sxp";
  @SerializedName(SERIALIZED_NAME_SXP)
  private ModifyAppReqProtocolsOidc sxp;

  public static final String SERIALIZED_NAME_CAS = "cas";
  @SerializedName(SERIALIZED_NAME_CAS)
  private ModifyAppReqProtocolsOidc cas;

  public ModifyAppReqProtocols() {
  }
   /**
   * Get oidc
   * @return oidc
  **/
  @javax.annotation.Nullable
  public ModifyAppReqProtocolsOidc getOidc() {
    return oidc;
  }


  public void setOidc(ModifyAppReqProtocolsOidc oidc) {
    this.oidc = oidc;
  }

   /**
   * Get saml
   * @return saml
  **/
  @javax.annotation.Nullable
  public ModifyAppReqProtocolsOidc getSaml() {
    return saml;
  }


  public void setSaml(ModifyAppReqProtocolsOidc saml) {
    this.saml = saml;
  }

   /**
   * Get oatuh2
   * @return oatuh2
  **/
  @javax.annotation.Nullable
  public ModifyAppReqProtocolsOidc getOatuh2() {
    return oatuh2;
  }


  public void setOatuh2(ModifyAppReqProtocolsOidc oatuh2) {
    this.oatuh2 = oatuh2;
  }

   /**
   * Get sxp
   * @return sxp
  **/
  @javax.annotation.Nullable
  public ModifyAppReqProtocolsOidc getSxp() {
    return sxp;
  }


  public void setSxp(ModifyAppReqProtocolsOidc sxp) {
    this.sxp = sxp;
  }

   /**
   * Get cas
   * @return cas
  **/
  @javax.annotation.Nullable
  public ModifyAppReqProtocolsOidc getCas() {
    return cas;
  }


  public void setCas(ModifyAppReqProtocolsOidc cas) {
    this.cas = cas;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ModifyAppReqProtocols modifyAppReqProtocols = (ModifyAppReqProtocols) o;
    return Objects.equals(this.oidc, modifyAppReqProtocols.oidc) &&
        Objects.equals(this.saml, modifyAppReqProtocols.saml) &&
        Objects.equals(this.oatuh2, modifyAppReqProtocols.oatuh2) &&
        Objects.equals(this.sxp, modifyAppReqProtocols.sxp) &&
        Objects.equals(this.cas, modifyAppReqProtocols.cas);
  }

  @Override
  public int hashCode() {
    return Objects.hash(oidc, saml, oatuh2, sxp, cas);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ModifyAppReqProtocols {\n");
    sb.append("    oidc: ").append(toIndentedString(oidc)).append("\n");
    sb.append("    saml: ").append(toIndentedString(saml)).append("\n");
    sb.append("    oatuh2: ").append(toIndentedString(oatuh2)).append("\n");
    sb.append("    sxp: ").append(toIndentedString(sxp)).append("\n");
    sb.append("    cas: ").append(toIndentedString(cas)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("oidc");
    openapiFields.add("saml");
    openapiFields.add("oatuh2");
    openapiFields.add("sxp");
    openapiFields.add("cas");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to ModifyAppReqProtocols
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ModifyAppReqProtocols.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ModifyAppReqProtocols is not found in the empty JSON string", ModifyAppReqProtocols.openapiRequiredFields.toString()));
        }
      }

        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `oidc`
      if (jsonObj.get("oidc") != null && !jsonObj.get("oidc").isJsonNull()) {
        ModifyAppReqProtocolsOidc.validateJsonElement(jsonObj.get("oidc"));
      }
      // validate the optional field `saml`
      if (jsonObj.get("saml") != null && !jsonObj.get("saml").isJsonNull()) {
        ModifyAppReqProtocolsOidc.validateJsonElement(jsonObj.get("saml"));
      }
      // validate the optional field `oatuh2`
      if (jsonObj.get("oatuh2") != null && !jsonObj.get("oatuh2").isJsonNull()) {
        ModifyAppReqProtocolsOidc.validateJsonElement(jsonObj.get("oatuh2"));
      }
      // validate the optional field `sxp`
      if (jsonObj.get("sxp") != null && !jsonObj.get("sxp").isJsonNull()) {
        ModifyAppReqProtocolsOidc.validateJsonElement(jsonObj.get("sxp"));
      }
      // validate the optional field `cas`
      if (jsonObj.get("cas") != null && !jsonObj.get("cas").isJsonNull()) {
        ModifyAppReqProtocolsOidc.validateJsonElement(jsonObj.get("cas"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ModifyAppReqProtocols.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ModifyAppReqProtocols' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ModifyAppReqProtocols> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ModifyAppReqProtocols.class));

       return (TypeAdapter<T>) new TypeAdapter<ModifyAppReqProtocols>() {
           @Override
           public void write(JsonWriter out, ModifyAppReqProtocols value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ModifyAppReqProtocols read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of ModifyAppReqProtocols given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of ModifyAppReqProtocols
  * @throws IOException if the JSON string is invalid with respect to ModifyAppReqProtocols
  */
  public static ModifyAppReqProtocols fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ModifyAppReqProtocols.class);
  }

 /**
  * Convert an instance of ModifyAppReqProtocols to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

