/*
 * IDMesh-Dev
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.4.7
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package cn.idmesh.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

import java.io.IOException;
import java.util.Arrays;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.util.HashSet;

import cn.idmesh.JSON;

/**
 * ModifyAuthRuleReq
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class ModifyAuthRuleReq {
  public static final String SERIALIZED_NAME_RESOURCE = "resource";
  @SerializedName(SERIALIZED_NAME_RESOURCE)
  private ResourceEntity1 resource;

  public static final String SERIALIZED_NAME_RESOURCE_SET = "resource_set";
  @SerializedName(SERIALIZED_NAME_RESOURCE_SET)
  private ResourceSetEntity resourceSet;

  public static final String SERIALIZED_NAME_AFFECT = "affect";
  @SerializedName(SERIALIZED_NAME_AFFECT)
  private String affect;

  public static final String SERIALIZED_NAME_OWNER_APP_ID = "owner_app_id";
  @SerializedName(SERIALIZED_NAME_OWNER_APP_ID)
  private String ownerAppId;

  public ModifyAuthRuleReq() {
  }
   /**
   * Get resource
   * @return resource
  **/
  @javax.annotation.Nullable
  public ResourceEntity1 getResource() {
    return resource;
  }


  public void setResource(ResourceEntity1 resource) {
    this.resource = resource;
  }

   /**
   * Get resourceSet
   * @return resourceSet
  **/
  @javax.annotation.Nullable
  public ResourceSetEntity getResourceSet() {
    return resourceSet;
  }


  public void setResourceSet(ResourceSetEntity resourceSet) {
    this.resourceSet = resourceSet;
  }

   /**
   * allow/deny
   * @return affect
  **/
  @javax.annotation.Nonnull
  public String getAffect() {
    return affect;
  }


  public void setAffect(String affect) {
    this.affect = affect;
  }

   /**
   * 用于标识应用（尤其是在使用全局资源的场景下）
   * @return ownerAppId
  **/
  @javax.annotation.Nonnull
  public String getOwnerAppId() {
    return ownerAppId;
  }


  public void setOwnerAppId(String ownerAppId) {
    this.ownerAppId = ownerAppId;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ModifyAuthRuleReq modifyAuthRuleReq = (ModifyAuthRuleReq) o;
    return Objects.equals(this.resource, modifyAuthRuleReq.resource) &&
        Objects.equals(this.resourceSet, modifyAuthRuleReq.resourceSet) &&
        Objects.equals(this.affect, modifyAuthRuleReq.affect) &&
        Objects.equals(this.ownerAppId, modifyAuthRuleReq.ownerAppId);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(resource, resourceSet, affect, ownerAppId);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ModifyAuthRuleReq {\n");
    sb.append("    resource: ").append(toIndentedString(resource)).append("\n");
    sb.append("    resourceSet: ").append(toIndentedString(resourceSet)).append("\n");
    sb.append("    affect: ").append(toIndentedString(affect)).append("\n");
    sb.append("    ownerAppId: ").append(toIndentedString(ownerAppId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("resource");
    openapiFields.add("resource_set");
    openapiFields.add("affect");
    openapiFields.add("owner_app_id");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("affect");
    openapiRequiredFields.add("owner_app_id");
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to ModifyAuthRuleReq
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ModifyAuthRuleReq.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ModifyAuthRuleReq is not found in the empty JSON string", ModifyAuthRuleReq.openapiRequiredFields.toString()));
        }
      }


      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : ModifyAuthRuleReq.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (!jsonObj.get("affect").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `affect` to be a primitive type in the JSON string but got `%s`", jsonObj.get("affect").toString()));
      }
      if (!jsonObj.get("owner_app_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `owner_app_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("owner_app_id").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ModifyAuthRuleReq.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ModifyAuthRuleReq' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ModifyAuthRuleReq> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ModifyAuthRuleReq.class));

       return (TypeAdapter<T>) new TypeAdapter<ModifyAuthRuleReq>() {
           @Override
           public void write(JsonWriter out, ModifyAuthRuleReq value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ModifyAuthRuleReq read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of ModifyAuthRuleReq given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of ModifyAuthRuleReq
  * @throws IOException if the JSON string is invalid with respect to ModifyAuthRuleReq
  */
  public static ModifyAuthRuleReq fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ModifyAuthRuleReq.class);
  }

 /**
  * Convert an instance of ModifyAuthRuleReq to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

