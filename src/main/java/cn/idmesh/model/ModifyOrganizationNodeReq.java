/*
 * IDMesh-Dev
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.4.7
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package cn.idmesh.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import com.google.gson.Gson;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.util.HashSet;

import cn.idmesh.JSON;

/**
 * ModifyOrganizationNodeReq
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class ModifyOrganizationNodeReq {
  public static final String SERIALIZED_NAME_ARN = "arn";
  @SerializedName(SERIALIZED_NAME_ARN)
  private String arn;

  public static final String SERIALIZED_NAME_TIME_CREATED = "time_created";
  @SerializedName(SERIALIZED_NAME_TIME_CREATED)
  private String timeCreated;

  public static final String SERIALIZED_NAME_TAG = "tag";
  @SerializedName(SERIALIZED_NAME_TAG)
  private String tag;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private String status;

  public static final String SERIALIZED_NAME_IS_POINTER = "is_pointer";
  @SerializedName(SERIALIZED_NAME_IS_POINTER)
  private String isPointer;

  public static final String SERIALIZED_NAME_CODE = "code";
  @SerializedName(SERIALIZED_NAME_CODE)
  private String code;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_PERM_NAMESPACE_ARN = "perm_namespace_arn";
  @SerializedName(SERIALIZED_NAME_PERM_NAMESPACE_ARN)
  private String permNamespaceArn;

  public static final String SERIALIZED_NAME_CONDITION = "condition";
  @SerializedName(SERIALIZED_NAME_CONDITION)
  private String condition;

  public static final String SERIALIZED_NAME_IS_DYNAMIC = "is_dynamic";
  @SerializedName(SERIALIZED_NAME_IS_DYNAMIC)
  private String isDynamic;

  public static final String SERIALIZED_NAME_OPERATOR_ID = "operator_id";
  @SerializedName(SERIALIZED_NAME_OPERATOR_ID)
  private String operatorId;

  public static final String SERIALIZED_NAME_POINTER_ID = "pointer_id";
  @SerializedName(SERIALIZED_NAME_POINTER_ID)
  private String pointerId;

  public static final String SERIALIZED_NAME_SEQ = "seq";
  @SerializedName(SERIALIZED_NAME_SEQ)
  private Integer seq;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_TIME_MODIFIED = "time_modified";
  @SerializedName(SERIALIZED_NAME_TIME_MODIFIED)
  private String timeModified;

  public static final String SERIALIZED_NAME_OBJECT_CODE = "object_code";
  @SerializedName(SERIALIZED_NAME_OBJECT_CODE)
  private String objectCode;

  public static final String SERIALIZED_NAME_PARENT_ID = "parent_id";
  @SerializedName(SERIALIZED_NAME_PARENT_ID)
  private String parentId;

  public static final String SERIALIZED_NAME_SYS_EXT_PROPS = "sys_ext_props";
  @SerializedName(SERIALIZED_NAME_SYS_EXT_PROPS)
  private Object sysExtProps;

  public static final String SERIALIZED_NAME_FREE_EXT_PROPS = "free_ext_props";
  @SerializedName(SERIALIZED_NAME_FREE_EXT_PROPS)
  private Object freeExtProps;

  public static final String SERIALIZED_NAME_SOURCE_PARENT_ID = "source_parent_id";
  @SerializedName(SERIALIZED_NAME_SOURCE_PARENT_ID)
  private String sourceParentId;

  public static final String SERIALIZED_NAME_DEST_PARENT_ID = "dest_parent_id";
  @SerializedName(SERIALIZED_NAME_DEST_PARENT_ID)
  private String destParentId;

  public ModifyOrganizationNodeReq() {
  }
   /**
   * Get arn
   * @return arn
  **/
  @javax.annotation.Nullable
  public String getArn() {
    return arn;
  }


  public void setArn(String arn) {
    this.arn = arn;
  }

   /**
   * 创建时间
   * @return timeCreated
  **/
  @javax.annotation.Nullable
  public String getTimeCreated() {
    return timeCreated;
  }


  public void setTimeCreated(String timeCreated) {
    this.timeCreated = timeCreated;
  }

   /**
   * 用于定义节点类型，目前支持：org（组织），role（角色），position（岗位），group（组）
   * @return tag
  **/
  @javax.annotation.Nullable
  public String getTag() {
    return tag;
  }


  public void setTag(String tag) {
    this.tag = tag;
  }

   /**
   * 状态
   * @return status
  **/
  @javax.annotation.Nullable
  public String getStatus() {
    return status;
  }


  public void setStatus(String status) {
    this.status = status;
  }

   /**
   * 是否指针类型
   * @return isPointer
  **/
  @javax.annotation.Nullable
  public String getIsPointer() {
    return isPointer;
  }


  public void setIsPointer(String isPointer) {
    this.isPointer = isPointer;
  }

   /**
   * 节点code
   * @return code
  **/
  @javax.annotation.Nullable
  public String getCode() {
    return code;
  }


  public void setCode(String code) {
    this.code = code;
  }

   /**
   * 节点名字
   * @return name
  **/
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }

   /**
   * 抽象权限容器的ARN
   * @return permNamespaceArn
  **/
  @javax.annotation.Nullable
  public String getPermNamespaceArn() {
    return permNamespaceArn;
  }


  public void setPermNamespaceArn(String permNamespaceArn) {
    this.permNamespaceArn = permNamespaceArn;
  }

   /**
   * Get condition
   * @return condition
  **/
  @javax.annotation.Nullable
  public String getCondition() {
    return condition;
  }


  public void setCondition(String condition) {
    this.condition = condition;
  }

   /**
   * 是否动态节点（0普通结点，1动态结点）
   * @return isDynamic
  **/
  @javax.annotation.Nullable
  public String getIsDynamic() {
    return isDynamic;
  }


  public void setIsDynamic(String isDynamic) {
    this.isDynamic = isDynamic;
  }

   /**
   * 操作者id
   * @return operatorId
  **/
  @javax.annotation.Nullable
  public String getOperatorId() {
    return operatorId;
  }


  public void setOperatorId(String operatorId) {
    this.operatorId = operatorId;
  }

   /**
   * 指针指向的实体节点
   * @return pointerId
  **/
  @javax.annotation.Nullable
  public String getPointerId() {
    return pointerId;
  }


  public void setPointerId(String pointerId) {
    this.pointerId = pointerId;
  }

   /**
   * 序号
   * @return seq
  **/
  @javax.annotation.Nullable
  public Integer getSeq() {
    return seq;
  }


  public void setSeq(Integer seq) {
    this.seq = seq;
  }

   /**
   * 描述
   * @return description
  **/
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }


  public void setDescription(String description) {
    this.description = description;
  }

   /**
   * 最后修改时间
   * @return timeModified
  **/
  @javax.annotation.Nullable
  public String getTimeModified() {
    return timeModified;
  }


  public void setTimeModified(String timeModified) {
    this.timeModified = timeModified;
  }

   /**
   * OBJ_ID，组织，角色，岗位，职级等
   * @return objectCode
  **/
  @javax.annotation.Nullable
  public String getObjectCode() {
    return objectCode;
  }


  public void setObjectCode(String objectCode) {
    this.objectCode = objectCode;
  }

   /**
   * 父节点id
   * @return parentId
  **/
  @javax.annotation.Nullable
  public String getParentId() {
    return parentId;
  }


  public void setParentId(String parentId) {
    this.parentId = parentId;
  }

   /**
   * 额外属性，需要先定义schema
   * @return sysExtProps
  **/
  @javax.annotation.Nullable
  public Object getSysExtProps() {
    return sysExtProps;
  }


  public void setSysExtProps(Object sysExtProps) {
    this.sysExtProps = sysExtProps;
  }

   /**
   * 可以自由扩展
   * @return freeExtProps
  **/
  @javax.annotation.Nullable
  public Object getFreeExtProps() {
    return freeExtProps;
  }


  public void setFreeExtProps(Object freeExtProps) {
    this.freeExtProps = freeExtProps;
  }

   /**
   * 移动节点时必填
   * @return sourceParentId
  **/
  @javax.annotation.Nullable
  public String getSourceParentId() {
    return sourceParentId;
  }


  public void setSourceParentId(String sourceParentId) {
    this.sourceParentId = sourceParentId;
  }

   /**
   * 移动节点时必填
   * @return destParentId
  **/
  @javax.annotation.Nullable
  public String getDestParentId() {
    return destParentId;
  }


  public void setDestParentId(String destParentId) {
    this.destParentId = destParentId;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ModifyOrganizationNodeReq modifyOrganizationNodeReq = (ModifyOrganizationNodeReq) o;
    return Objects.equals(this.arn, modifyOrganizationNodeReq.arn) &&
        Objects.equals(this.timeCreated, modifyOrganizationNodeReq.timeCreated) &&
        Objects.equals(this.tag, modifyOrganizationNodeReq.tag) &&
        Objects.equals(this.status, modifyOrganizationNodeReq.status) &&
        Objects.equals(this.isPointer, modifyOrganizationNodeReq.isPointer) &&
        Objects.equals(this.code, modifyOrganizationNodeReq.code) &&
        Objects.equals(this.name, modifyOrganizationNodeReq.name) &&
        Objects.equals(this.permNamespaceArn, modifyOrganizationNodeReq.permNamespaceArn) &&
        Objects.equals(this.condition, modifyOrganizationNodeReq.condition) &&
        Objects.equals(this.isDynamic, modifyOrganizationNodeReq.isDynamic) &&
        Objects.equals(this.operatorId, modifyOrganizationNodeReq.operatorId) &&
        Objects.equals(this.pointerId, modifyOrganizationNodeReq.pointerId) &&
        Objects.equals(this.seq, modifyOrganizationNodeReq.seq) &&
        Objects.equals(this.description, modifyOrganizationNodeReq.description) &&
        Objects.equals(this.timeModified, modifyOrganizationNodeReq.timeModified) &&
        Objects.equals(this.objectCode, modifyOrganizationNodeReq.objectCode) &&
        Objects.equals(this.parentId, modifyOrganizationNodeReq.parentId) &&
        Objects.equals(this.sysExtProps, modifyOrganizationNodeReq.sysExtProps) &&
        Objects.equals(this.freeExtProps, modifyOrganizationNodeReq.freeExtProps) &&
        Objects.equals(this.sourceParentId, modifyOrganizationNodeReq.sourceParentId) &&
        Objects.equals(this.destParentId, modifyOrganizationNodeReq.destParentId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(arn, timeCreated, tag, status, isPointer, code, name, permNamespaceArn, condition, isDynamic, operatorId, pointerId, seq, description, timeModified, objectCode, parentId, sysExtProps, freeExtProps, sourceParentId, destParentId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ModifyOrganizationNodeReq {\n");
    sb.append("    arn: ").append(toIndentedString(arn)).append("\n");
    sb.append("    timeCreated: ").append(toIndentedString(timeCreated)).append("\n");
    sb.append("    tag: ").append(toIndentedString(tag)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    isPointer: ").append(toIndentedString(isPointer)).append("\n");
    sb.append("    code: ").append(toIndentedString(code)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    permNamespaceArn: ").append(toIndentedString(permNamespaceArn)).append("\n");
    sb.append("    condition: ").append(toIndentedString(condition)).append("\n");
    sb.append("    isDynamic: ").append(toIndentedString(isDynamic)).append("\n");
    sb.append("    operatorId: ").append(toIndentedString(operatorId)).append("\n");
    sb.append("    pointerId: ").append(toIndentedString(pointerId)).append("\n");
    sb.append("    seq: ").append(toIndentedString(seq)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    timeModified: ").append(toIndentedString(timeModified)).append("\n");
    sb.append("    objectCode: ").append(toIndentedString(objectCode)).append("\n");
    sb.append("    parentId: ").append(toIndentedString(parentId)).append("\n");
    sb.append("    sysExtProps: ").append(toIndentedString(sysExtProps)).append("\n");
    sb.append("    freeExtProps: ").append(toIndentedString(freeExtProps)).append("\n");
    sb.append("    sourceParentId: ").append(toIndentedString(sourceParentId)).append("\n");
    sb.append("    destParentId: ").append(toIndentedString(destParentId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("arn");
    openapiFields.add("time_created");
    openapiFields.add("tag");
    openapiFields.add("status");
    openapiFields.add("is_pointer");
    openapiFields.add("code");
    openapiFields.add("name");
    openapiFields.add("perm_namespace_arn");
    openapiFields.add("condition");
    openapiFields.add("is_dynamic");
    openapiFields.add("operator_id");
    openapiFields.add("pointer_id");
    openapiFields.add("seq");
    openapiFields.add("description");
    openapiFields.add("time_modified");
    openapiFields.add("object_code");
    openapiFields.add("parent_id");
    openapiFields.add("sys_ext_props");
    openapiFields.add("free_ext_props");
    openapiFields.add("source_parent_id");
    openapiFields.add("dest_parent_id");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to ModifyOrganizationNodeReq
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ModifyOrganizationNodeReq.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ModifyOrganizationNodeReq is not found in the empty JSON string", ModifyOrganizationNodeReq.openapiRequiredFields.toString()));
        }
      }

        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("arn") != null && !jsonObj.get("arn").isJsonNull()) && !jsonObj.get("arn").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `arn` to be a primitive type in the JSON string but got `%s`", jsonObj.get("arn").toString()));
      }
      if ((jsonObj.get("time_created") != null && !jsonObj.get("time_created").isJsonNull()) && !jsonObj.get("time_created").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `time_created` to be a primitive type in the JSON string but got `%s`", jsonObj.get("time_created").toString()));
      }
      if ((jsonObj.get("tag") != null && !jsonObj.get("tag").isJsonNull()) && !jsonObj.get("tag").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `tag` to be a primitive type in the JSON string but got `%s`", jsonObj.get("tag").toString()));
      }
      if ((jsonObj.get("status") != null && !jsonObj.get("status").isJsonNull()) && !jsonObj.get("status").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `status` to be a primitive type in the JSON string but got `%s`", jsonObj.get("status").toString()));
      }
      if ((jsonObj.get("is_pointer") != null && !jsonObj.get("is_pointer").isJsonNull()) && !jsonObj.get("is_pointer").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `is_pointer` to be a primitive type in the JSON string but got `%s`", jsonObj.get("is_pointer").toString()));
      }
      if ((jsonObj.get("code") != null && !jsonObj.get("code").isJsonNull()) && !jsonObj.get("code").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `code` to be a primitive type in the JSON string but got `%s`", jsonObj.get("code").toString()));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("perm_namespace_arn") != null && !jsonObj.get("perm_namespace_arn").isJsonNull()) && !jsonObj.get("perm_namespace_arn").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `perm_namespace_arn` to be a primitive type in the JSON string but got `%s`", jsonObj.get("perm_namespace_arn").toString()));
      }
      if ((jsonObj.get("condition") != null && !jsonObj.get("condition").isJsonNull()) && !jsonObj.get("condition").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `condition` to be a primitive type in the JSON string but got `%s`", jsonObj.get("condition").toString()));
      }
      if ((jsonObj.get("is_dynamic") != null && !jsonObj.get("is_dynamic").isJsonNull()) && !jsonObj.get("is_dynamic").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `is_dynamic` to be a primitive type in the JSON string but got `%s`", jsonObj.get("is_dynamic").toString()));
      }
      if ((jsonObj.get("operator_id") != null && !jsonObj.get("operator_id").isJsonNull()) && !jsonObj.get("operator_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `operator_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("operator_id").toString()));
      }
      if ((jsonObj.get("pointer_id") != null && !jsonObj.get("pointer_id").isJsonNull()) && !jsonObj.get("pointer_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `pointer_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("pointer_id").toString()));
      }
      if ((jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) && !jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      if ((jsonObj.get("time_modified") != null && !jsonObj.get("time_modified").isJsonNull()) && !jsonObj.get("time_modified").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `time_modified` to be a primitive type in the JSON string but got `%s`", jsonObj.get("time_modified").toString()));
      }
      if ((jsonObj.get("object_code") != null && !jsonObj.get("object_code").isJsonNull()) && !jsonObj.get("object_code").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `object_code` to be a primitive type in the JSON string but got `%s`", jsonObj.get("object_code").toString()));
      }
      if ((jsonObj.get("parent_id") != null && !jsonObj.get("parent_id").isJsonNull()) && !jsonObj.get("parent_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `parent_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("parent_id").toString()));
      }
      if ((jsonObj.get("source_parent_id") != null && !jsonObj.get("source_parent_id").isJsonNull()) && !jsonObj.get("source_parent_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `source_parent_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("source_parent_id").toString()));
      }
      if ((jsonObj.get("dest_parent_id") != null && !jsonObj.get("dest_parent_id").isJsonNull()) && !jsonObj.get("dest_parent_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `dest_parent_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("dest_parent_id").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ModifyOrganizationNodeReq.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ModifyOrganizationNodeReq' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ModifyOrganizationNodeReq> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ModifyOrganizationNodeReq.class));

       return (TypeAdapter<T>) new TypeAdapter<ModifyOrganizationNodeReq>() {
           @Override
           public void write(JsonWriter out, ModifyOrganizationNodeReq value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ModifyOrganizationNodeReq read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of ModifyOrganizationNodeReq given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of ModifyOrganizationNodeReq
  * @throws IOException if the JSON string is invalid with respect to ModifyOrganizationNodeReq
  */
  public static ModifyOrganizationNodeReq fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ModifyOrganizationNodeReq.class);
  }

 /**
  * Convert an instance of ModifyOrganizationNodeReq to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

