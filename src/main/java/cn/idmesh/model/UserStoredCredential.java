/*
 * IDMesh-Dev
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.4.7
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package cn.idmesh.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import com.google.gson.Gson;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.util.HashSet;

import cn.idmesh.JSON;

/**
 * UserStoredCredential
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class UserStoredCredential {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Integer id;

  public static final String SERIALIZED_NAME_USERNAME = "username";
  @SerializedName(SERIALIZED_NAME_USERNAME)
  private String username;

  public static final String SERIALIZED_NAME_PASSWORD = "password";
  @SerializedName(SERIALIZED_NAME_PASSWORD)
  private String password;

  public static final String SERIALIZED_NAME_DISPLAY_NAME = "display_name";
  @SerializedName(SERIALIZED_NAME_DISPLAY_NAME)
  private String displayName;

  public static final String SERIALIZED_NAME_FIRSTNAME = "firstname";
  @SerializedName(SERIALIZED_NAME_FIRSTNAME)
  private String firstname;

  public static final String SERIALIZED_NAME_LASTNAME = "lastname";
  @SerializedName(SERIALIZED_NAME_LASTNAME)
  private String lastname;

  public static final String SERIALIZED_NAME_REALNAME = "realname";
  @SerializedName(SERIALIZED_NAME_REALNAME)
  private String realname;

  public static final String SERIALIZED_NAME_PINYIN = "pinyin";
  @SerializedName(SERIALIZED_NAME_PINYIN)
  private String pinyin;

  public static final String SERIALIZED_NAME_NICKNAME = "nickname";
  @SerializedName(SERIALIZED_NAME_NICKNAME)
  private String nickname;

  public static final String SERIALIZED_NAME_AVATAR = "avatar";
  @SerializedName(SERIALIZED_NAME_AVATAR)
  private Object avatar;

  public static final String SERIALIZED_NAME_USER_TYPE = "user_type";
  @SerializedName(SERIALIZED_NAME_USER_TYPE)
  private String userType;

  public static final String SERIALIZED_NAME_MOBILE = "mobile";
  @SerializedName(SERIALIZED_NAME_MOBILE)
  private String mobile;

  public static final String SERIALIZED_NAME_EMAIL = "email";
  @SerializedName(SERIALIZED_NAME_EMAIL)
  private String email;

  public static final String SERIALIZED_NAME_GENDER = "gender";
  @SerializedName(SERIALIZED_NAME_GENDER)
  private String gender;

  public static final String SERIALIZED_NAME_CERT_TYPE = "cert_type";
  @SerializedName(SERIALIZED_NAME_CERT_TYPE)
  private String certType;

  public static final String SERIALIZED_NAME_CERT_NUMBER = "cert_number";
  @SerializedName(SERIALIZED_NAME_CERT_NUMBER)
  private String certNumber;

  public static final String SERIALIZED_NAME_REGION = "region";
  @SerializedName(SERIALIZED_NAME_REGION)
  private String region;

  public static final String SERIALIZED_NAME_WORK_TIME = "work_time";
  @SerializedName(SERIALIZED_NAME_WORK_TIME)
  private String workTime;

  public static final String SERIALIZED_NAME_WORK_TITLE = "work_title";
  @SerializedName(SERIALIZED_NAME_WORK_TITLE)
  private String workTitle;

  public static final String SERIALIZED_NAME_ARN = "arn";
  @SerializedName(SERIALIZED_NAME_ARN)
  private String arn;

  public static final String SERIALIZED_NAME_IDP_CONFIG_ID = "idp_config_id";
  @SerializedName(SERIALIZED_NAME_IDP_CONFIG_ID)
  private Integer idpConfigId;

  public static final String SERIALIZED_NAME_DEVELOPER_ID = "developer_id";
  @SerializedName(SERIALIZED_NAME_DEVELOPER_ID)
  private Integer developerId;

  public static final String SERIALIZED_NAME_TENANT_ID = "tenant_id";
  @SerializedName(SERIALIZED_NAME_TENANT_ID)
  private Integer tenantId;

  public static final String SERIALIZED_NAME_LAST_LOGIN_IPADDR = "last_login_ipaddr";
  @SerializedName(SERIALIZED_NAME_LAST_LOGIN_IPADDR)
  private String lastLoginIpaddr;

  public static final String SERIALIZED_NAME_LAST_LOGIN_TIME = "last_login_time";
  @SerializedName(SERIALIZED_NAME_LAST_LOGIN_TIME)
  private String lastLoginTime;

  public static final String SERIALIZED_NAME_TIME_CREATED = "time_created";
  @SerializedName(SERIALIZED_NAME_TIME_CREATED)
  private String timeCreated;

  public static final String SERIALIZED_NAME_TIME_MODIFIED = "time_modified";
  @SerializedName(SERIALIZED_NAME_TIME_MODIFIED)
  private Integer timeModified;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private String status;

  public static final String SERIALIZED_NAME_SYS_EXT_PROPS = "sys_ext_props";
  @SerializedName(SERIALIZED_NAME_SYS_EXT_PROPS)
  private Object sysExtProps;

  public static final String SERIALIZED_NAME_FREE_EXT_PROPS = "free_ext_props";
  @SerializedName(SERIALIZED_NAME_FREE_EXT_PROPS)
  private Object freeExtProps;

  public UserStoredCredential() {
  }
   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nullable
  public Integer getId() {
    return id;
  }


  public void setId(Integer id) {
    this.id = id;
  }

   /**
   * Get username
   * @return username
  **/
  @javax.annotation.Nullable
  public String getUsername() {
    return username;
  }


  public void setUsername(String username) {
    this.username = username;
  }

   /**
   * Get password
   * @return password
  **/
  @javax.annotation.Nullable
  public String getPassword() {
    return password;
  }


  public void setPassword(String password) {
    this.password = password;
  }

   /**
   * Get displayName
   * @return displayName
  **/
  @javax.annotation.Nullable
  public String getDisplayName() {
    return displayName;
  }


  public void setDisplayName(String displayName) {
    this.displayName = displayName;
  }

   /**
   * Get firstname
   * @return firstname
  **/
  @javax.annotation.Nullable
  public String getFirstname() {
    return firstname;
  }


  public void setFirstname(String firstname) {
    this.firstname = firstname;
  }

   /**
   * Get lastname
   * @return lastname
  **/
  @javax.annotation.Nullable
  public String getLastname() {
    return lastname;
  }


  public void setLastname(String lastname) {
    this.lastname = lastname;
  }

   /**
   * Get realname
   * @return realname
  **/
  @javax.annotation.Nullable
  public String getRealname() {
    return realname;
  }


  public void setRealname(String realname) {
    this.realname = realname;
  }

   /**
   * Get pinyin
   * @return pinyin
  **/
  @javax.annotation.Nullable
  public String getPinyin() {
    return pinyin;
  }


  public void setPinyin(String pinyin) {
    this.pinyin = pinyin;
  }

   /**
   * Get nickname
   * @return nickname
  **/
  @javax.annotation.Nullable
  public String getNickname() {
    return nickname;
  }


  public void setNickname(String nickname) {
    this.nickname = nickname;
  }

   /**
   * json对象
   * @return avatar
  **/
  @javax.annotation.Nullable
  public Object getAvatar() {
    return avatar;
  }


  public void setAvatar(Object avatar) {
    this.avatar = avatar;
  }

   /**
   * Get userType
   * @return userType
  **/
  @javax.annotation.Nullable
  public String getUserType() {
    return userType;
  }


  public void setUserType(String userType) {
    this.userType = userType;
  }

   /**
   * Get mobile
   * @return mobile
  **/
  @javax.annotation.Nullable
  public String getMobile() {
    return mobile;
  }


  public void setMobile(String mobile) {
    this.mobile = mobile;
  }

   /**
   * Get email
   * @return email
  **/
  @javax.annotation.Nullable
  public String getEmail() {
    return email;
  }


  public void setEmail(String email) {
    this.email = email;
  }

   /**
   * Get gender
   * @return gender
  **/
  @javax.annotation.Nullable
  public String getGender() {
    return gender;
  }


  public void setGender(String gender) {
    this.gender = gender;
  }

   /**
   * Get certType
   * @return certType
  **/
  @javax.annotation.Nullable
  public String getCertType() {
    return certType;
  }


  public void setCertType(String certType) {
    this.certType = certType;
  }

   /**
   * Get certNumber
   * @return certNumber
  **/
  @javax.annotation.Nullable
  public String getCertNumber() {
    return certNumber;
  }


  public void setCertNumber(String certNumber) {
    this.certNumber = certNumber;
  }

   /**
   * Get region
   * @return region
  **/
  @javax.annotation.Nullable
  public String getRegion() {
    return region;
  }


  public void setRegion(String region) {
    this.region = region;
  }

   /**
   * Get workTime
   * @return workTime
  **/
  @javax.annotation.Nullable
  public String getWorkTime() {
    return workTime;
  }


  public void setWorkTime(String workTime) {
    this.workTime = workTime;
  }

   /**
   * Get workTitle
   * @return workTitle
  **/
  @javax.annotation.Nullable
  public String getWorkTitle() {
    return workTitle;
  }


  public void setWorkTitle(String workTitle) {
    this.workTitle = workTitle;
  }

   /**
   * Get arn
   * @return arn
  **/
  @javax.annotation.Nullable
  public String getArn() {
    return arn;
  }


  public void setArn(String arn) {
    this.arn = arn;
  }

   /**
   * Get idpConfigId
   * @return idpConfigId
  **/
  @javax.annotation.Nullable
  public Integer getIdpConfigId() {
    return idpConfigId;
  }


  public void setIdpConfigId(Integer idpConfigId) {
    this.idpConfigId = idpConfigId;
  }

   /**
   * Get developerId
   * @return developerId
  **/
  @javax.annotation.Nullable
  public Integer getDeveloperId() {
    return developerId;
  }


  public void setDeveloperId(Integer developerId) {
    this.developerId = developerId;
  }

   /**
   * Get tenantId
   * @return tenantId
  **/
  @javax.annotation.Nullable
  public Integer getTenantId() {
    return tenantId;
  }


  public void setTenantId(Integer tenantId) {
    this.tenantId = tenantId;
  }

   /**
   * Get lastLoginIpaddr
   * @return lastLoginIpaddr
  **/
  @javax.annotation.Nullable
  public String getLastLoginIpaddr() {
    return lastLoginIpaddr;
  }


  public void setLastLoginIpaddr(String lastLoginIpaddr) {
    this.lastLoginIpaddr = lastLoginIpaddr;
  }

   /**
   * Get lastLoginTime
   * @return lastLoginTime
  **/
  @javax.annotation.Nullable
  public String getLastLoginTime() {
    return lastLoginTime;
  }


  public void setLastLoginTime(String lastLoginTime) {
    this.lastLoginTime = lastLoginTime;
  }

   /**
   * Get timeCreated
   * @return timeCreated
  **/
  @javax.annotation.Nullable
  public String getTimeCreated() {
    return timeCreated;
  }


  public void setTimeCreated(String timeCreated) {
    this.timeCreated = timeCreated;
  }

   /**
   * Get timeModified
   * @return timeModified
  **/
  @javax.annotation.Nullable
  public Integer getTimeModified() {
    return timeModified;
  }


  public void setTimeModified(Integer timeModified) {
    this.timeModified = timeModified;
  }

   /**
   * Get status
   * @return status
  **/
  @javax.annotation.Nullable
  public String getStatus() {
    return status;
  }


  public void setStatus(String status) {
    this.status = status;
  }

   /**
   * json对象
   * @return sysExtProps
  **/
  @javax.annotation.Nullable
  public Object getSysExtProps() {
    return sysExtProps;
  }


  public void setSysExtProps(Object sysExtProps) {
    this.sysExtProps = sysExtProps;
  }

   /**
   * json对象
   * @return freeExtProps
  **/
  @javax.annotation.Nullable
  public Object getFreeExtProps() {
    return freeExtProps;
  }


  public void setFreeExtProps(Object freeExtProps) {
    this.freeExtProps = freeExtProps;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UserStoredCredential userStoredCredential = (UserStoredCredential) o;
    return Objects.equals(this.id, userStoredCredential.id) &&
        Objects.equals(this.username, userStoredCredential.username) &&
        Objects.equals(this.password, userStoredCredential.password) &&
        Objects.equals(this.displayName, userStoredCredential.displayName) &&
        Objects.equals(this.firstname, userStoredCredential.firstname) &&
        Objects.equals(this.lastname, userStoredCredential.lastname) &&
        Objects.equals(this.realname, userStoredCredential.realname) &&
        Objects.equals(this.pinyin, userStoredCredential.pinyin) &&
        Objects.equals(this.nickname, userStoredCredential.nickname) &&
        Objects.equals(this.avatar, userStoredCredential.avatar) &&
        Objects.equals(this.userType, userStoredCredential.userType) &&
        Objects.equals(this.mobile, userStoredCredential.mobile) &&
        Objects.equals(this.email, userStoredCredential.email) &&
        Objects.equals(this.gender, userStoredCredential.gender) &&
        Objects.equals(this.certType, userStoredCredential.certType) &&
        Objects.equals(this.certNumber, userStoredCredential.certNumber) &&
        Objects.equals(this.region, userStoredCredential.region) &&
        Objects.equals(this.workTime, userStoredCredential.workTime) &&
        Objects.equals(this.workTitle, userStoredCredential.workTitle) &&
        Objects.equals(this.arn, userStoredCredential.arn) &&
        Objects.equals(this.idpConfigId, userStoredCredential.idpConfigId) &&
        Objects.equals(this.developerId, userStoredCredential.developerId) &&
        Objects.equals(this.tenantId, userStoredCredential.tenantId) &&
        Objects.equals(this.lastLoginIpaddr, userStoredCredential.lastLoginIpaddr) &&
        Objects.equals(this.lastLoginTime, userStoredCredential.lastLoginTime) &&
        Objects.equals(this.timeCreated, userStoredCredential.timeCreated) &&
        Objects.equals(this.timeModified, userStoredCredential.timeModified) &&
        Objects.equals(this.status, userStoredCredential.status) &&
        Objects.equals(this.sysExtProps, userStoredCredential.sysExtProps) &&
        Objects.equals(this.freeExtProps, userStoredCredential.freeExtProps);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, username, password, displayName, firstname, lastname, realname, pinyin, nickname, avatar, userType, mobile, email, gender, certType, certNumber, region, workTime, workTitle, arn, idpConfigId, developerId, tenantId, lastLoginIpaddr, lastLoginTime, timeCreated, timeModified, status, sysExtProps, freeExtProps);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UserStoredCredential {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    username: ").append(toIndentedString(username)).append("\n");
    sb.append("    password: ").append(toIndentedString(password)).append("\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    firstname: ").append(toIndentedString(firstname)).append("\n");
    sb.append("    lastname: ").append(toIndentedString(lastname)).append("\n");
    sb.append("    realname: ").append(toIndentedString(realname)).append("\n");
    sb.append("    pinyin: ").append(toIndentedString(pinyin)).append("\n");
    sb.append("    nickname: ").append(toIndentedString(nickname)).append("\n");
    sb.append("    avatar: ").append(toIndentedString(avatar)).append("\n");
    sb.append("    userType: ").append(toIndentedString(userType)).append("\n");
    sb.append("    mobile: ").append(toIndentedString(mobile)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    gender: ").append(toIndentedString(gender)).append("\n");
    sb.append("    certType: ").append(toIndentedString(certType)).append("\n");
    sb.append("    certNumber: ").append(toIndentedString(certNumber)).append("\n");
    sb.append("    region: ").append(toIndentedString(region)).append("\n");
    sb.append("    workTime: ").append(toIndentedString(workTime)).append("\n");
    sb.append("    workTitle: ").append(toIndentedString(workTitle)).append("\n");
    sb.append("    arn: ").append(toIndentedString(arn)).append("\n");
    sb.append("    idpConfigId: ").append(toIndentedString(idpConfigId)).append("\n");
    sb.append("    developerId: ").append(toIndentedString(developerId)).append("\n");
    sb.append("    tenantId: ").append(toIndentedString(tenantId)).append("\n");
    sb.append("    lastLoginIpaddr: ").append(toIndentedString(lastLoginIpaddr)).append("\n");
    sb.append("    lastLoginTime: ").append(toIndentedString(lastLoginTime)).append("\n");
    sb.append("    timeCreated: ").append(toIndentedString(timeCreated)).append("\n");
    sb.append("    timeModified: ").append(toIndentedString(timeModified)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    sysExtProps: ").append(toIndentedString(sysExtProps)).append("\n");
    sb.append("    freeExtProps: ").append(toIndentedString(freeExtProps)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("id");
    openapiFields.add("username");
    openapiFields.add("password");
    openapiFields.add("display_name");
    openapiFields.add("firstname");
    openapiFields.add("lastname");
    openapiFields.add("realname");
    openapiFields.add("pinyin");
    openapiFields.add("nickname");
    openapiFields.add("avatar");
    openapiFields.add("user_type");
    openapiFields.add("mobile");
    openapiFields.add("email");
    openapiFields.add("gender");
    openapiFields.add("cert_type");
    openapiFields.add("cert_number");
    openapiFields.add("region");
    openapiFields.add("work_time");
    openapiFields.add("work_title");
    openapiFields.add("arn");
    openapiFields.add("idp_config_id");
    openapiFields.add("developer_id");
    openapiFields.add("tenant_id");
    openapiFields.add("last_login_ipaddr");
    openapiFields.add("last_login_time");
    openapiFields.add("time_created");
    openapiFields.add("time_modified");
    openapiFields.add("status");
    openapiFields.add("sys_ext_props");
    openapiFields.add("free_ext_props");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to UserStoredCredential
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!UserStoredCredential.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in UserStoredCredential is not found in the empty JSON string", UserStoredCredential.openapiRequiredFields.toString()));
        }
      }

        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("username") != null && !jsonObj.get("username").isJsonNull()) && !jsonObj.get("username").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `username` to be a primitive type in the JSON string but got `%s`", jsonObj.get("username").toString()));
      }
      if ((jsonObj.get("password") != null && !jsonObj.get("password").isJsonNull()) && !jsonObj.get("password").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `password` to be a primitive type in the JSON string but got `%s`", jsonObj.get("password").toString()));
      }
      if ((jsonObj.get("display_name") != null && !jsonObj.get("display_name").isJsonNull()) && !jsonObj.get("display_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `display_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("display_name").toString()));
      }
      if ((jsonObj.get("firstname") != null && !jsonObj.get("firstname").isJsonNull()) && !jsonObj.get("firstname").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `firstname` to be a primitive type in the JSON string but got `%s`", jsonObj.get("firstname").toString()));
      }
      if ((jsonObj.get("lastname") != null && !jsonObj.get("lastname").isJsonNull()) && !jsonObj.get("lastname").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `lastname` to be a primitive type in the JSON string but got `%s`", jsonObj.get("lastname").toString()));
      }
      if ((jsonObj.get("realname") != null && !jsonObj.get("realname").isJsonNull()) && !jsonObj.get("realname").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `realname` to be a primitive type in the JSON string but got `%s`", jsonObj.get("realname").toString()));
      }
      if ((jsonObj.get("pinyin") != null && !jsonObj.get("pinyin").isJsonNull()) && !jsonObj.get("pinyin").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `pinyin` to be a primitive type in the JSON string but got `%s`", jsonObj.get("pinyin").toString()));
      }
      if ((jsonObj.get("nickname") != null && !jsonObj.get("nickname").isJsonNull()) && !jsonObj.get("nickname").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `nickname` to be a primitive type in the JSON string but got `%s`", jsonObj.get("nickname").toString()));
      }
      if ((jsonObj.get("user_type") != null && !jsonObj.get("user_type").isJsonNull()) && !jsonObj.get("user_type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `user_type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("user_type").toString()));
      }
      if ((jsonObj.get("mobile") != null && !jsonObj.get("mobile").isJsonNull()) && !jsonObj.get("mobile").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `mobile` to be a primitive type in the JSON string but got `%s`", jsonObj.get("mobile").toString()));
      }
      if ((jsonObj.get("email") != null && !jsonObj.get("email").isJsonNull()) && !jsonObj.get("email").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `email` to be a primitive type in the JSON string but got `%s`", jsonObj.get("email").toString()));
      }
      if ((jsonObj.get("gender") != null && !jsonObj.get("gender").isJsonNull()) && !jsonObj.get("gender").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `gender` to be a primitive type in the JSON string but got `%s`", jsonObj.get("gender").toString()));
      }
      if ((jsonObj.get("cert_type") != null && !jsonObj.get("cert_type").isJsonNull()) && !jsonObj.get("cert_type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `cert_type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("cert_type").toString()));
      }
      if ((jsonObj.get("cert_number") != null && !jsonObj.get("cert_number").isJsonNull()) && !jsonObj.get("cert_number").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `cert_number` to be a primitive type in the JSON string but got `%s`", jsonObj.get("cert_number").toString()));
      }
      if ((jsonObj.get("region") != null && !jsonObj.get("region").isJsonNull()) && !jsonObj.get("region").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `region` to be a primitive type in the JSON string but got `%s`", jsonObj.get("region").toString()));
      }
      if ((jsonObj.get("work_time") != null && !jsonObj.get("work_time").isJsonNull()) && !jsonObj.get("work_time").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `work_time` to be a primitive type in the JSON string but got `%s`", jsonObj.get("work_time").toString()));
      }
      if ((jsonObj.get("work_title") != null && !jsonObj.get("work_title").isJsonNull()) && !jsonObj.get("work_title").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `work_title` to be a primitive type in the JSON string but got `%s`", jsonObj.get("work_title").toString()));
      }
      if ((jsonObj.get("arn") != null && !jsonObj.get("arn").isJsonNull()) && !jsonObj.get("arn").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `arn` to be a primitive type in the JSON string but got `%s`", jsonObj.get("arn").toString()));
      }
      if ((jsonObj.get("last_login_ipaddr") != null && !jsonObj.get("last_login_ipaddr").isJsonNull()) && !jsonObj.get("last_login_ipaddr").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `last_login_ipaddr` to be a primitive type in the JSON string but got `%s`", jsonObj.get("last_login_ipaddr").toString()));
      }
      if ((jsonObj.get("last_login_time") != null && !jsonObj.get("last_login_time").isJsonNull()) && !jsonObj.get("last_login_time").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `last_login_time` to be a primitive type in the JSON string but got `%s`", jsonObj.get("last_login_time").toString()));
      }
      if ((jsonObj.get("time_created") != null && !jsonObj.get("time_created").isJsonNull()) && !jsonObj.get("time_created").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `time_created` to be a primitive type in the JSON string but got `%s`", jsonObj.get("time_created").toString()));
      }
      if ((jsonObj.get("status") != null && !jsonObj.get("status").isJsonNull()) && !jsonObj.get("status").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `status` to be a primitive type in the JSON string but got `%s`", jsonObj.get("status").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!UserStoredCredential.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'UserStoredCredential' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<UserStoredCredential> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(UserStoredCredential.class));

       return (TypeAdapter<T>) new TypeAdapter<UserStoredCredential>() {
           @Override
           public void write(JsonWriter out, UserStoredCredential value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public UserStoredCredential read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of UserStoredCredential given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of UserStoredCredential
  * @throws IOException if the JSON string is invalid with respect to UserStoredCredential
  */
  public static UserStoredCredential fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, UserStoredCredential.class);
  }

 /**
  * Convert an instance of UserStoredCredential to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

