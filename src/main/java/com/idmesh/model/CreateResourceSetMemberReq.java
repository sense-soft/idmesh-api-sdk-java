/*
 * IDMesh-Dev
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.4.7
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.idmesh.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import com.idmesh.JSON;

/**
 * CreateResourceSetMemberReq
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class CreateResourceSetMemberReq {
  public static final String SERIALIZED_NAME_RESOURCE_ID = "resource_id";
  @SerializedName(SERIALIZED_NAME_RESOURCE_ID)
  private Integer resourceId;

  public static final String SERIALIZED_NAME_RESOURCE_SCOPE = "resource_scope";
  @SerializedName(SERIALIZED_NAME_RESOURCE_SCOPE)
  private String resourceScope;

  public static final String SERIALIZED_NAME_RESOURCE_ACTIONS = "resource_actions";
  @SerializedName(SERIALIZED_NAME_RESOURCE_ACTIONS)
  private List<String> resourceActions;

  public static final String SERIALIZED_NAME_MATCH_ALL_ACTIONS = "match_all_actions";
  @SerializedName(SERIALIZED_NAME_MATCH_ALL_ACTIONS)
  private Boolean matchAllActions;

  public CreateResourceSetMemberReq() {
  }
   /**
   * Get resourceId
   * @return resourceId
  **/
  @javax.annotation.Nonnull
  public Integer getResourceId() {
    return resourceId;
  }


  public void setResourceId(Integer resourceId) {
    this.resourceId = resourceId;
  }

   /**
   * Get resourceScope
   * @return resourceScope
  **/
  @javax.annotation.Nonnull
  public String getResourceScope() {
    return resourceScope;
  }


  public void setResourceScope(String resourceScope) {
    this.resourceScope = resourceScope;
  }

   /**
   * Get resourceActions
   * @return resourceActions
  **/
  @javax.annotation.Nullable
  public List<String> getResourceActions() {
    return resourceActions;
  }


  public void setResourceActions(List<String> resourceActions) {
    this.resourceActions = resourceActions;
  }

   /**
   * Get matchAllActions
   * @return matchAllActions
  **/
  @javax.annotation.Nonnull
  public Boolean getMatchAllActions() {
    return matchAllActions;
  }


  public void setMatchAllActions(Boolean matchAllActions) {
    this.matchAllActions = matchAllActions;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateResourceSetMemberReq createResourceSetMemberReq = (CreateResourceSetMemberReq) o;
    return Objects.equals(this.resourceId, createResourceSetMemberReq.resourceId) &&
        Objects.equals(this.resourceScope, createResourceSetMemberReq.resourceScope) &&
        Objects.equals(this.resourceActions, createResourceSetMemberReq.resourceActions) &&
        Objects.equals(this.matchAllActions, createResourceSetMemberReq.matchAllActions);
  }

  @Override
  public int hashCode() {
    return Objects.hash(resourceId, resourceScope, resourceActions, matchAllActions);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateResourceSetMemberReq {\n");
    sb.append("    resourceId: ").append(toIndentedString(resourceId)).append("\n");
    sb.append("    resourceScope: ").append(toIndentedString(resourceScope)).append("\n");
    sb.append("    resourceActions: ").append(toIndentedString(resourceActions)).append("\n");
    sb.append("    matchAllActions: ").append(toIndentedString(matchAllActions)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("resource_id");
    openapiFields.add("resource_scope");
    openapiFields.add("resource_actions");
    openapiFields.add("match_all_actions");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("resource_id");
    openapiRequiredFields.add("resource_scope");
    openapiRequiredFields.add("match_all_actions");
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to CreateResourceSetMemberReq
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CreateResourceSetMemberReq.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CreateResourceSetMemberReq is not found in the empty JSON string", CreateResourceSetMemberReq.openapiRequiredFields.toString()));
        }
      }


      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : CreateResourceSetMemberReq.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (!jsonObj.get("resource_scope").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `resource_scope` to be a primitive type in the JSON string but got `%s`", jsonObj.get("resource_scope").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("resource_actions") != null && !jsonObj.get("resource_actions").isJsonNull() && !jsonObj.get("resource_actions").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `resource_actions` to be an array in the JSON string but got `%s`", jsonObj.get("resource_actions").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CreateResourceSetMemberReq.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CreateResourceSetMemberReq' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CreateResourceSetMemberReq> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CreateResourceSetMemberReq.class));

       return (TypeAdapter<T>) new TypeAdapter<CreateResourceSetMemberReq>() {
           @Override
           public void write(JsonWriter out, CreateResourceSetMemberReq value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CreateResourceSetMemberReq read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of CreateResourceSetMemberReq given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of CreateResourceSetMemberReq
  * @throws IOException if the JSON string is invalid with respect to CreateResourceSetMemberReq
  */
  public static CreateResourceSetMemberReq fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CreateResourceSetMemberReq.class);
  }

 /**
  * Convert an instance of CreateResourceSetMemberReq to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

