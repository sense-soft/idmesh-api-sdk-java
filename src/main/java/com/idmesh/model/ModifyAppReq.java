/*
 * IDMesh-Dev
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.4.7
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.idmesh.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.idmesh.model.ModifyAppReqProtocols;
import com.idmesh.model.ModifyAppReqTemplateParams;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import com.idmesh.JSON;

/**
 * ModifyAppReq
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class ModifyAppReq {
  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_DOMAIN_SN = "domain_sn";
  @SerializedName(SERIALIZED_NAME_DOMAIN_SN)
  private String domainSn;

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private String type;

  public static final String SERIALIZED_NAME_APP_ID = "app_id";
  @SerializedName(SERIALIZED_NAME_APP_ID)
  private String appId;

  public static final String SERIALIZED_NAME_APP_SECRET = "app_secret";
  @SerializedName(SERIALIZED_NAME_APP_SECRET)
  private String appSecret;

  public static final String SERIALIZED_NAME_CATEGORY = "category";
  @SerializedName(SERIALIZED_NAME_CATEGORY)
  private String category;

  public static final String SERIALIZED_NAME_DESCR = "descr";
  @SerializedName(SERIALIZED_NAME_DESCR)
  private String descr;

  public static final String SERIALIZED_NAME_LOGO = "logo";
  @SerializedName(SERIALIZED_NAME_LOGO)
  private String logo;

  public static final String SERIALIZED_NAME_LOGIN_URL = "login_url";
  @SerializedName(SERIALIZED_NAME_LOGIN_URL)
  private String loginUrl;

  public static final String SERIALIZED_NAME_REDIRECT_URL = "redirect_url";
  @SerializedName(SERIALIZED_NAME_REDIRECT_URL)
  private String redirectUrl;

  public static final String SERIALIZED_NAME_LOGOUT_URL = "logout_url";
  @SerializedName(SERIALIZED_NAME_LOGOUT_URL)
  private String logoutUrl;

  public static final String SERIALIZED_NAME_SUB_ACCOUNT_POLICY = "sub_account_policy";
  @SerializedName(SERIALIZED_NAME_SUB_ACCOUNT_POLICY)
  private String subAccountPolicy;

  public static final String SERIALIZED_NAME_SYS_EXT_PROPS = "sys_ext_props";
  @SerializedName(SERIALIZED_NAME_SYS_EXT_PROPS)
  private Object sysExtProps;

  public static final String SERIALIZED_NAME_FREE_EXT_PROPS = "free_ext_props";
  @SerializedName(SERIALIZED_NAME_FREE_EXT_PROPS)
  private Object freeExtProps;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private String status;

  public static final String SERIALIZED_NAME_TEMPLATE_PARAMS = "template_params";
  @SerializedName(SERIALIZED_NAME_TEMPLATE_PARAMS)
  private ModifyAppReqTemplateParams templateParams;

  public static final String SERIALIZED_NAME_PROTOCOLS = "protocols";
  @SerializedName(SERIALIZED_NAME_PROTOCOLS)
  private ModifyAppReqProtocols protocols;

  public ModifyAppReq() {
  }
   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }

   /**
   * Get domainSn
   * @return domainSn
  **/
  @javax.annotation.Nullable
  public String getDomainSn() {
    return domainSn;
  }


  public void setDomainSn(String domainSn) {
    this.domainSn = domainSn;
  }

   /**
   * 1自建应用，2市场应用
   * @return type
  **/
  @javax.annotation.Nullable
  public String getType() {
    return type;
  }


  public void setType(String type) {
    this.type = type;
  }

   /**
   * Get appId
   * @return appId
  **/
  @javax.annotation.Nullable
  public String getAppId() {
    return appId;
  }


  public void setAppId(String appId) {
    this.appId = appId;
  }

   /**
   * Get appSecret
   * @return appSecret
  **/
  @javax.annotation.Nullable
  public String getAppSecret() {
    return appSecret;
  }


  public void setAppSecret(String appSecret) {
    this.appSecret = appSecret;
  }

   /**
   * Get category
   * @return category
  **/
  @javax.annotation.Nullable
  public String getCategory() {
    return category;
  }


  public void setCategory(String category) {
    this.category = category;
  }

   /**
   * Get descr
   * @return descr
  **/
  @javax.annotation.Nullable
  public String getDescr() {
    return descr;
  }


  public void setDescr(String descr) {
    this.descr = descr;
  }

   /**
   * Get logo
   * @return logo
  **/
  @javax.annotation.Nullable
  public String getLogo() {
    return logo;
  }


  public void setLogo(String logo) {
    this.logo = logo;
  }

   /**
   * Get loginUrl
   * @return loginUrl
  **/
  @javax.annotation.Nullable
  public String getLoginUrl() {
    return loginUrl;
  }


  public void setLoginUrl(String loginUrl) {
    this.loginUrl = loginUrl;
  }

   /**
   * Get redirectUrl
   * @return redirectUrl
  **/
  @javax.annotation.Nullable
  public String getRedirectUrl() {
    return redirectUrl;
  }


  public void setRedirectUrl(String redirectUrl) {
    this.redirectUrl = redirectUrl;
  }

   /**
   * Get logoutUrl
   * @return logoutUrl
  **/
  @javax.annotation.Nullable
  public String getLogoutUrl() {
    return logoutUrl;
  }


  public void setLogoutUrl(String logoutUrl) {
    this.logoutUrl = logoutUrl;
  }

   /**
   * Get subAccountPolicy
   * @return subAccountPolicy
  **/
  @javax.annotation.Nullable
  public String getSubAccountPolicy() {
    return subAccountPolicy;
  }


  public void setSubAccountPolicy(String subAccountPolicy) {
    this.subAccountPolicy = subAccountPolicy;
  }

   /**
   * Get sysExtProps
   * @return sysExtProps
  **/
  @javax.annotation.Nullable
  public Object getSysExtProps() {
    return sysExtProps;
  }


  public void setSysExtProps(Object sysExtProps) {
    this.sysExtProps = sysExtProps;
  }

   /**
   * Get freeExtProps
   * @return freeExtProps
  **/
  @javax.annotation.Nullable
  public Object getFreeExtProps() {
    return freeExtProps;
  }


  public void setFreeExtProps(Object freeExtProps) {
    this.freeExtProps = freeExtProps;
  }

   /**
   * 0禁用，1启用
   * @return status
  **/
  @javax.annotation.Nullable
  public String getStatus() {
    return status;
  }


  public void setStatus(String status) {
    this.status = status;
  }

   /**
   * Get templateParams
   * @return templateParams
  **/
  @javax.annotation.Nullable
  public ModifyAppReqTemplateParams getTemplateParams() {
    return templateParams;
  }


  public void setTemplateParams(ModifyAppReqTemplateParams templateParams) {
    this.templateParams = templateParams;
  }

   /**
   * Get protocols
   * @return protocols
  **/
  @javax.annotation.Nullable
  public ModifyAppReqProtocols getProtocols() {
    return protocols;
  }


  public void setProtocols(ModifyAppReqProtocols protocols) {
    this.protocols = protocols;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ModifyAppReq modifyAppReq = (ModifyAppReq) o;
    return Objects.equals(this.name, modifyAppReq.name) &&
        Objects.equals(this.domainSn, modifyAppReq.domainSn) &&
        Objects.equals(this.type, modifyAppReq.type) &&
        Objects.equals(this.appId, modifyAppReq.appId) &&
        Objects.equals(this.appSecret, modifyAppReq.appSecret) &&
        Objects.equals(this.category, modifyAppReq.category) &&
        Objects.equals(this.descr, modifyAppReq.descr) &&
        Objects.equals(this.logo, modifyAppReq.logo) &&
        Objects.equals(this.loginUrl, modifyAppReq.loginUrl) &&
        Objects.equals(this.redirectUrl, modifyAppReq.redirectUrl) &&
        Objects.equals(this.logoutUrl, modifyAppReq.logoutUrl) &&
        Objects.equals(this.subAccountPolicy, modifyAppReq.subAccountPolicy) &&
        Objects.equals(this.sysExtProps, modifyAppReq.sysExtProps) &&
        Objects.equals(this.freeExtProps, modifyAppReq.freeExtProps) &&
        Objects.equals(this.status, modifyAppReq.status) &&
        Objects.equals(this.templateParams, modifyAppReq.templateParams) &&
        Objects.equals(this.protocols, modifyAppReq.protocols);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, domainSn, type, appId, appSecret, category, descr, logo, loginUrl, redirectUrl, logoutUrl, subAccountPolicy, sysExtProps, freeExtProps, status, templateParams, protocols);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ModifyAppReq {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    domainSn: ").append(toIndentedString(domainSn)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    appId: ").append(toIndentedString(appId)).append("\n");
    sb.append("    appSecret: ").append(toIndentedString(appSecret)).append("\n");
    sb.append("    category: ").append(toIndentedString(category)).append("\n");
    sb.append("    descr: ").append(toIndentedString(descr)).append("\n");
    sb.append("    logo: ").append(toIndentedString(logo)).append("\n");
    sb.append("    loginUrl: ").append(toIndentedString(loginUrl)).append("\n");
    sb.append("    redirectUrl: ").append(toIndentedString(redirectUrl)).append("\n");
    sb.append("    logoutUrl: ").append(toIndentedString(logoutUrl)).append("\n");
    sb.append("    subAccountPolicy: ").append(toIndentedString(subAccountPolicy)).append("\n");
    sb.append("    sysExtProps: ").append(toIndentedString(sysExtProps)).append("\n");
    sb.append("    freeExtProps: ").append(toIndentedString(freeExtProps)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    templateParams: ").append(toIndentedString(templateParams)).append("\n");
    sb.append("    protocols: ").append(toIndentedString(protocols)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("name");
    openapiFields.add("domain_sn");
    openapiFields.add("type");
    openapiFields.add("app_id");
    openapiFields.add("app_secret");
    openapiFields.add("category");
    openapiFields.add("descr");
    openapiFields.add("logo");
    openapiFields.add("login_url");
    openapiFields.add("redirect_url");
    openapiFields.add("logout_url");
    openapiFields.add("sub_account_policy");
    openapiFields.add("sys_ext_props");
    openapiFields.add("free_ext_props");
    openapiFields.add("status");
    openapiFields.add("template_params");
    openapiFields.add("protocols");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to ModifyAppReq
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ModifyAppReq.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ModifyAppReq is not found in the empty JSON string", ModifyAppReq.openapiRequiredFields.toString()));
        }
      }

        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("domain_sn") != null && !jsonObj.get("domain_sn").isJsonNull()) && !jsonObj.get("domain_sn").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `domain_sn` to be a primitive type in the JSON string but got `%s`", jsonObj.get("domain_sn").toString()));
      }
      if ((jsonObj.get("type") != null && !jsonObj.get("type").isJsonNull()) && !jsonObj.get("type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("type").toString()));
      }
      if ((jsonObj.get("app_id") != null && !jsonObj.get("app_id").isJsonNull()) && !jsonObj.get("app_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `app_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("app_id").toString()));
      }
      if ((jsonObj.get("app_secret") != null && !jsonObj.get("app_secret").isJsonNull()) && !jsonObj.get("app_secret").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `app_secret` to be a primitive type in the JSON string but got `%s`", jsonObj.get("app_secret").toString()));
      }
      if ((jsonObj.get("category") != null && !jsonObj.get("category").isJsonNull()) && !jsonObj.get("category").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `category` to be a primitive type in the JSON string but got `%s`", jsonObj.get("category").toString()));
      }
      if ((jsonObj.get("descr") != null && !jsonObj.get("descr").isJsonNull()) && !jsonObj.get("descr").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `descr` to be a primitive type in the JSON string but got `%s`", jsonObj.get("descr").toString()));
      }
      if ((jsonObj.get("logo") != null && !jsonObj.get("logo").isJsonNull()) && !jsonObj.get("logo").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `logo` to be a primitive type in the JSON string but got `%s`", jsonObj.get("logo").toString()));
      }
      if ((jsonObj.get("login_url") != null && !jsonObj.get("login_url").isJsonNull()) && !jsonObj.get("login_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `login_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("login_url").toString()));
      }
      if ((jsonObj.get("redirect_url") != null && !jsonObj.get("redirect_url").isJsonNull()) && !jsonObj.get("redirect_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `redirect_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("redirect_url").toString()));
      }
      if ((jsonObj.get("logout_url") != null && !jsonObj.get("logout_url").isJsonNull()) && !jsonObj.get("logout_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `logout_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("logout_url").toString()));
      }
      if ((jsonObj.get("sub_account_policy") != null && !jsonObj.get("sub_account_policy").isJsonNull()) && !jsonObj.get("sub_account_policy").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sub_account_policy` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sub_account_policy").toString()));
      }
      if ((jsonObj.get("status") != null && !jsonObj.get("status").isJsonNull()) && !jsonObj.get("status").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `status` to be a primitive type in the JSON string but got `%s`", jsonObj.get("status").toString()));
      }
      // validate the optional field `template_params`
      if (jsonObj.get("template_params") != null && !jsonObj.get("template_params").isJsonNull()) {
        ModifyAppReqTemplateParams.validateJsonElement(jsonObj.get("template_params"));
      }
      // validate the optional field `protocols`
      if (jsonObj.get("protocols") != null && !jsonObj.get("protocols").isJsonNull()) {
        ModifyAppReqProtocols.validateJsonElement(jsonObj.get("protocols"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ModifyAppReq.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ModifyAppReq' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ModifyAppReq> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ModifyAppReq.class));

       return (TypeAdapter<T>) new TypeAdapter<ModifyAppReq>() {
           @Override
           public void write(JsonWriter out, ModifyAppReq value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ModifyAppReq read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of ModifyAppReq given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of ModifyAppReq
  * @throws IOException if the JSON string is invalid with respect to ModifyAppReq
  */
  public static ModifyAppReq fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ModifyAppReq.class);
  }

 /**
  * Convert an instance of ModifyAppReq to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

