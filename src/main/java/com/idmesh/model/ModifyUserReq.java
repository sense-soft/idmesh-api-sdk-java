/*
 * IDMesh-Dev
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.4.7
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.idmesh.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import com.idmesh.JSON;

/**
 * ModifyUserReq
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class ModifyUserReq {
  public static final String SERIALIZED_NAME_USERNAME = "username";
  @SerializedName(SERIALIZED_NAME_USERNAME)
  private String username;

  public static final String SERIALIZED_NAME_DISPLAY_NAME = "display_name";
  @SerializedName(SERIALIZED_NAME_DISPLAY_NAME)
  private String displayName;

  public static final String SERIALIZED_NAME_FIRSTNAME = "firstname";
  @SerializedName(SERIALIZED_NAME_FIRSTNAME)
  private String firstname;

  public static final String SERIALIZED_NAME_LASTNAME = "lastname";
  @SerializedName(SERIALIZED_NAME_LASTNAME)
  private String lastname;

  public static final String SERIALIZED_NAME_REALNAME = "realname";
  @SerializedName(SERIALIZED_NAME_REALNAME)
  private String realname;

  public static final String SERIALIZED_NAME_PINYIN = "pinyin";
  @SerializedName(SERIALIZED_NAME_PINYIN)
  private String pinyin;

  public static final String SERIALIZED_NAME_NICKNAME = "nickname";
  @SerializedName(SERIALIZED_NAME_NICKNAME)
  private String nickname;

  public static final String SERIALIZED_NAME_MOBILE = "mobile";
  @SerializedName(SERIALIZED_NAME_MOBILE)
  private String mobile;

  public static final String SERIALIZED_NAME_EMAIL = "email";
  @SerializedName(SERIALIZED_NAME_EMAIL)
  private String email;

  public static final String SERIALIZED_NAME_GENDER = "gender";
  @SerializedName(SERIALIZED_NAME_GENDER)
  private String gender;

  public static final String SERIALIZED_NAME_CERT_TYPE = "cert_type";
  @SerializedName(SERIALIZED_NAME_CERT_TYPE)
  private String certType;

  public static final String SERIALIZED_NAME_CERT_NUMBER = "cert_number";
  @SerializedName(SERIALIZED_NAME_CERT_NUMBER)
  private String certNumber;

  public static final String SERIALIZED_NAME_REGION = "region";
  @SerializedName(SERIALIZED_NAME_REGION)
  private String region;

  public static final String SERIALIZED_NAME_WORK_TIME = "work_time";
  @SerializedName(SERIALIZED_NAME_WORK_TIME)
  private String workTime;

  public static final String SERIALIZED_NAME_WORK_TITLE = "work_title";
  @SerializedName(SERIALIZED_NAME_WORK_TITLE)
  private String workTitle;

  public static final String SERIALIZED_NAME_LAST_LOGIN_IPADDR = "last_login_ipaddr";
  @SerializedName(SERIALIZED_NAME_LAST_LOGIN_IPADDR)
  private String lastLoginIpaddr;

  public static final String SERIALIZED_NAME_LAST_LOGIN_TIME = "last_login_time";
  @SerializedName(SERIALIZED_NAME_LAST_LOGIN_TIME)
  private String lastLoginTime;

  public static final String SERIALIZED_NAME_SYS_EXT_PROPS = "sys_ext_props";
  @SerializedName(SERIALIZED_NAME_SYS_EXT_PROPS)
  private Object sysExtProps;

  public static final String SERIALIZED_NAME_FREE_EXT_PROPS = "free_ext_props";
  @SerializedName(SERIALIZED_NAME_FREE_EXT_PROPS)
  private Object freeExtProps;

  public ModifyUserReq() {
  }
   /**
   * 用户名，验证唯一
   * @return username
  **/
  @javax.annotation.Nullable
  public String getUsername() {
    return username;
  }


  public void setUsername(String username) {
    this.username = username;
  }

   /**
   * 显示名称
   * @return displayName
  **/
  @javax.annotation.Nullable
  public String getDisplayName() {
    return displayName;
  }


  public void setDisplayName(String displayName) {
    this.displayName = displayName;
  }

   /**
   * 名
   * @return firstname
  **/
  @javax.annotation.Nullable
  public String getFirstname() {
    return firstname;
  }


  public void setFirstname(String firstname) {
    this.firstname = firstname;
  }

   /**
   * 姓
   * @return lastname
  **/
  @javax.annotation.Nullable
  public String getLastname() {
    return lastname;
  }


  public void setLastname(String lastname) {
    this.lastname = lastname;
  }

   /**
   * 真实姓名
   * @return realname
  **/
  @javax.annotation.Nullable
  public String getRealname() {
    return realname;
  }


  public void setRealname(String realname) {
    this.realname = realname;
  }

   /**
   * 拼音
   * @return pinyin
  **/
  @javax.annotation.Nullable
  public String getPinyin() {
    return pinyin;
  }


  public void setPinyin(String pinyin) {
    this.pinyin = pinyin;
  }

   /**
   * 昵称
   * @return nickname
  **/
  @javax.annotation.Nullable
  public String getNickname() {
    return nickname;
  }


  public void setNickname(String nickname) {
    this.nickname = nickname;
  }

   /**
   * 手机
   * @return mobile
  **/
  @javax.annotation.Nullable
  public String getMobile() {
    return mobile;
  }


  public void setMobile(String mobile) {
    this.mobile = mobile;
  }

   /**
   * 邮箱
   * @return email
  **/
  @javax.annotation.Nullable
  public String getEmail() {
    return email;
  }


  public void setEmail(String email) {
    this.email = email;
  }

   /**
   * 性别：1男，0女
   * @return gender
  **/
  @javax.annotation.Nullable
  public String getGender() {
    return gender;
  }


  public void setGender(String gender) {
    this.gender = gender;
  }

   /**
   * 证件类型
   * @return certType
  **/
  @javax.annotation.Nullable
  public String getCertType() {
    return certType;
  }


  public void setCertType(String certType) {
    this.certType = certType;
  }

   /**
   * 证件号
   * @return certNumber
  **/
  @javax.annotation.Nullable
  public String getCertNumber() {
    return certNumber;
  }


  public void setCertNumber(String certNumber) {
    this.certNumber = certNumber;
  }

   /**
   * 区域
   * @return region
  **/
  @javax.annotation.Nullable
  public String getRegion() {
    return region;
  }


  public void setRegion(String region) {
    this.region = region;
  }

   /**
   * 加入时间
   * @return workTime
  **/
  @javax.annotation.Nullable
  public String getWorkTime() {
    return workTime;
  }


  public void setWorkTime(String workTime) {
    this.workTime = workTime;
  }

   /**
   * 职位
   * @return workTitle
  **/
  @javax.annotation.Nullable
  public String getWorkTitle() {
    return workTitle;
  }


  public void setWorkTitle(String workTitle) {
    this.workTitle = workTitle;
  }

   /**
   * 上次登录IP
   * @return lastLoginIpaddr
  **/
  @javax.annotation.Nullable
  public String getLastLoginIpaddr() {
    return lastLoginIpaddr;
  }


  public void setLastLoginIpaddr(String lastLoginIpaddr) {
    this.lastLoginIpaddr = lastLoginIpaddr;
  }

   /**
   * 上次登录时间
   * @return lastLoginTime
  **/
  @javax.annotation.Nullable
  public String getLastLoginTime() {
    return lastLoginTime;
  }


  public void setLastLoginTime(String lastLoginTime) {
    this.lastLoginTime = lastLoginTime;
  }

   /**
   * 系统扩展信息，json对象{\&quot;age\&quot;: 18, \&quot;love\&quot;: \&quot;足球\&quot;}
   * @return sysExtProps
  **/
  @javax.annotation.Nullable
  public Object getSysExtProps() {
    return sysExtProps;
  }


  public void setSysExtProps(Object sysExtProps) {
    this.sysExtProps = sysExtProps;
  }

   /**
   * 自由扩展属性，json对象
   * @return freeExtProps
  **/
  @javax.annotation.Nullable
  public Object getFreeExtProps() {
    return freeExtProps;
  }


  public void setFreeExtProps(Object freeExtProps) {
    this.freeExtProps = freeExtProps;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ModifyUserReq modifyUserReq = (ModifyUserReq) o;
    return Objects.equals(this.username, modifyUserReq.username) &&
        Objects.equals(this.displayName, modifyUserReq.displayName) &&
        Objects.equals(this.firstname, modifyUserReq.firstname) &&
        Objects.equals(this.lastname, modifyUserReq.lastname) &&
        Objects.equals(this.realname, modifyUserReq.realname) &&
        Objects.equals(this.pinyin, modifyUserReq.pinyin) &&
        Objects.equals(this.nickname, modifyUserReq.nickname) &&
        Objects.equals(this.mobile, modifyUserReq.mobile) &&
        Objects.equals(this.email, modifyUserReq.email) &&
        Objects.equals(this.gender, modifyUserReq.gender) &&
        Objects.equals(this.certType, modifyUserReq.certType) &&
        Objects.equals(this.certNumber, modifyUserReq.certNumber) &&
        Objects.equals(this.region, modifyUserReq.region) &&
        Objects.equals(this.workTime, modifyUserReq.workTime) &&
        Objects.equals(this.workTitle, modifyUserReq.workTitle) &&
        Objects.equals(this.lastLoginIpaddr, modifyUserReq.lastLoginIpaddr) &&
        Objects.equals(this.lastLoginTime, modifyUserReq.lastLoginTime) &&
        Objects.equals(this.sysExtProps, modifyUserReq.sysExtProps) &&
        Objects.equals(this.freeExtProps, modifyUserReq.freeExtProps);
  }

  @Override
  public int hashCode() {
    return Objects.hash(username, displayName, firstname, lastname, realname, pinyin, nickname, mobile, email, gender, certType, certNumber, region, workTime, workTitle, lastLoginIpaddr, lastLoginTime, sysExtProps, freeExtProps);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ModifyUserReq {\n");
    sb.append("    username: ").append(toIndentedString(username)).append("\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    firstname: ").append(toIndentedString(firstname)).append("\n");
    sb.append("    lastname: ").append(toIndentedString(lastname)).append("\n");
    sb.append("    realname: ").append(toIndentedString(realname)).append("\n");
    sb.append("    pinyin: ").append(toIndentedString(pinyin)).append("\n");
    sb.append("    nickname: ").append(toIndentedString(nickname)).append("\n");
    sb.append("    mobile: ").append(toIndentedString(mobile)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    gender: ").append(toIndentedString(gender)).append("\n");
    sb.append("    certType: ").append(toIndentedString(certType)).append("\n");
    sb.append("    certNumber: ").append(toIndentedString(certNumber)).append("\n");
    sb.append("    region: ").append(toIndentedString(region)).append("\n");
    sb.append("    workTime: ").append(toIndentedString(workTime)).append("\n");
    sb.append("    workTitle: ").append(toIndentedString(workTitle)).append("\n");
    sb.append("    lastLoginIpaddr: ").append(toIndentedString(lastLoginIpaddr)).append("\n");
    sb.append("    lastLoginTime: ").append(toIndentedString(lastLoginTime)).append("\n");
    sb.append("    sysExtProps: ").append(toIndentedString(sysExtProps)).append("\n");
    sb.append("    freeExtProps: ").append(toIndentedString(freeExtProps)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("username");
    openapiFields.add("display_name");
    openapiFields.add("firstname");
    openapiFields.add("lastname");
    openapiFields.add("realname");
    openapiFields.add("pinyin");
    openapiFields.add("nickname");
    openapiFields.add("mobile");
    openapiFields.add("email");
    openapiFields.add("gender");
    openapiFields.add("cert_type");
    openapiFields.add("cert_number");
    openapiFields.add("region");
    openapiFields.add("work_time");
    openapiFields.add("work_title");
    openapiFields.add("last_login_ipaddr");
    openapiFields.add("last_login_time");
    openapiFields.add("sys_ext_props");
    openapiFields.add("free_ext_props");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to ModifyUserReq
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ModifyUserReq.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ModifyUserReq is not found in the empty JSON string", ModifyUserReq.openapiRequiredFields.toString()));
        }
      }

        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("username") != null && !jsonObj.get("username").isJsonNull()) && !jsonObj.get("username").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `username` to be a primitive type in the JSON string but got `%s`", jsonObj.get("username").toString()));
      }
      if ((jsonObj.get("display_name") != null && !jsonObj.get("display_name").isJsonNull()) && !jsonObj.get("display_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `display_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("display_name").toString()));
      }
      if ((jsonObj.get("firstname") != null && !jsonObj.get("firstname").isJsonNull()) && !jsonObj.get("firstname").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `firstname` to be a primitive type in the JSON string but got `%s`", jsonObj.get("firstname").toString()));
      }
      if ((jsonObj.get("lastname") != null && !jsonObj.get("lastname").isJsonNull()) && !jsonObj.get("lastname").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `lastname` to be a primitive type in the JSON string but got `%s`", jsonObj.get("lastname").toString()));
      }
      if ((jsonObj.get("realname") != null && !jsonObj.get("realname").isJsonNull()) && !jsonObj.get("realname").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `realname` to be a primitive type in the JSON string but got `%s`", jsonObj.get("realname").toString()));
      }
      if ((jsonObj.get("pinyin") != null && !jsonObj.get("pinyin").isJsonNull()) && !jsonObj.get("pinyin").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `pinyin` to be a primitive type in the JSON string but got `%s`", jsonObj.get("pinyin").toString()));
      }
      if ((jsonObj.get("nickname") != null && !jsonObj.get("nickname").isJsonNull()) && !jsonObj.get("nickname").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `nickname` to be a primitive type in the JSON string but got `%s`", jsonObj.get("nickname").toString()));
      }
      if ((jsonObj.get("mobile") != null && !jsonObj.get("mobile").isJsonNull()) && !jsonObj.get("mobile").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `mobile` to be a primitive type in the JSON string but got `%s`", jsonObj.get("mobile").toString()));
      }
      if ((jsonObj.get("email") != null && !jsonObj.get("email").isJsonNull()) && !jsonObj.get("email").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `email` to be a primitive type in the JSON string but got `%s`", jsonObj.get("email").toString()));
      }
      if ((jsonObj.get("gender") != null && !jsonObj.get("gender").isJsonNull()) && !jsonObj.get("gender").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `gender` to be a primitive type in the JSON string but got `%s`", jsonObj.get("gender").toString()));
      }
      if ((jsonObj.get("cert_type") != null && !jsonObj.get("cert_type").isJsonNull()) && !jsonObj.get("cert_type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `cert_type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("cert_type").toString()));
      }
      if ((jsonObj.get("cert_number") != null && !jsonObj.get("cert_number").isJsonNull()) && !jsonObj.get("cert_number").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `cert_number` to be a primitive type in the JSON string but got `%s`", jsonObj.get("cert_number").toString()));
      }
      if ((jsonObj.get("region") != null && !jsonObj.get("region").isJsonNull()) && !jsonObj.get("region").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `region` to be a primitive type in the JSON string but got `%s`", jsonObj.get("region").toString()));
      }
      if ((jsonObj.get("work_time") != null && !jsonObj.get("work_time").isJsonNull()) && !jsonObj.get("work_time").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `work_time` to be a primitive type in the JSON string but got `%s`", jsonObj.get("work_time").toString()));
      }
      if ((jsonObj.get("work_title") != null && !jsonObj.get("work_title").isJsonNull()) && !jsonObj.get("work_title").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `work_title` to be a primitive type in the JSON string but got `%s`", jsonObj.get("work_title").toString()));
      }
      if ((jsonObj.get("last_login_ipaddr") != null && !jsonObj.get("last_login_ipaddr").isJsonNull()) && !jsonObj.get("last_login_ipaddr").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `last_login_ipaddr` to be a primitive type in the JSON string but got `%s`", jsonObj.get("last_login_ipaddr").toString()));
      }
      if ((jsonObj.get("last_login_time") != null && !jsonObj.get("last_login_time").isJsonNull()) && !jsonObj.get("last_login_time").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `last_login_time` to be a primitive type in the JSON string but got `%s`", jsonObj.get("last_login_time").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ModifyUserReq.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ModifyUserReq' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ModifyUserReq> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ModifyUserReq.class));

       return (TypeAdapter<T>) new TypeAdapter<ModifyUserReq>() {
           @Override
           public void write(JsonWriter out, ModifyUserReq value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ModifyUserReq read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of ModifyUserReq given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of ModifyUserReq
  * @throws IOException if the JSON string is invalid with respect to ModifyUserReq
  */
  public static ModifyUserReq fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ModifyUserReq.class);
  }

 /**
  * Convert an instance of ModifyUserReq to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

