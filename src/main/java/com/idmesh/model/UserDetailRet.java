/*
 * IDMesh-Dev
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.4.7
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.idmesh.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.*;
import java.time.LocalDate;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import com.idmesh.JSON;

/**
 * UserDetailRet
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class UserDetailRet {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Integer id;

  public static final String SERIALIZED_NAME_USERNAME = "username";
  @SerializedName(SERIALIZED_NAME_USERNAME)
  private String username;

  public static final String SERIALIZED_NAME_PASSWORD = "password";
  @SerializedName(SERIALIZED_NAME_PASSWORD)
  private String password;

  public static final String SERIALIZED_NAME_DISPLAY_NAME = "display_name";
  @SerializedName(SERIALIZED_NAME_DISPLAY_NAME)
  private String displayName;

  public static final String SERIALIZED_NAME_FIRSTNAME = "firstname";
  @SerializedName(SERIALIZED_NAME_FIRSTNAME)
  private String firstname;

  public static final String SERIALIZED_NAME_LASTNAME = "lastname";
  @SerializedName(SERIALIZED_NAME_LASTNAME)
  private String lastname;

  public static final String SERIALIZED_NAME_REALNAME = "realname";
  @SerializedName(SERIALIZED_NAME_REALNAME)
  private String realname;

  public static final String SERIALIZED_NAME_PINYIN = "pinyin";
  @SerializedName(SERIALIZED_NAME_PINYIN)
  private String pinyin;

  public static final String SERIALIZED_NAME_NICKNAME = "nickname";
  @SerializedName(SERIALIZED_NAME_NICKNAME)
  private String nickname;

  public static final String SERIALIZED_NAME_USER_TYPE = "user_type";
  @SerializedName(SERIALIZED_NAME_USER_TYPE)
  private String userType;

  public static final String SERIALIZED_NAME_MOBILE = "mobile";
  @SerializedName(SERIALIZED_NAME_MOBILE)
  private String mobile;

  public static final String SERIALIZED_NAME_EMAIL = "email";
  @SerializedName(SERIALIZED_NAME_EMAIL)
  private String email;

  public static final String SERIALIZED_NAME_GENDER = "gender";
  @SerializedName(SERIALIZED_NAME_GENDER)
  private String gender;

  public static final String SERIALIZED_NAME_CERT_TYPE = "cert_type";
  @SerializedName(SERIALIZED_NAME_CERT_TYPE)
  private String certType;

  public static final String SERIALIZED_NAME_CERT_NUMBER = "cert_number";
  @SerializedName(SERIALIZED_NAME_CERT_NUMBER)
  private String certNumber;

  public static final String SERIALIZED_NAME_REGION = "region";
  @SerializedName(SERIALIZED_NAME_REGION)
  private String region;

  public static final String SERIALIZED_NAME_WORK_TIME = "work_time";
  @SerializedName(SERIALIZED_NAME_WORK_TIME)
  private LocalDate workTime = null;

  public static final String SERIALIZED_NAME_WORK_TITLE = "work_title";
  @SerializedName(SERIALIZED_NAME_WORK_TITLE)
  private String workTitle;

  public static final String SERIALIZED_NAME_EXT_PROP = "ext_prop";
  @SerializedName(SERIALIZED_NAME_EXT_PROP)
  private Object extProp = null;

  public static final String SERIALIZED_NAME_ARN = "arn";
  @SerializedName(SERIALIZED_NAME_ARN)
  private String arn;

  public static final String SERIALIZED_NAME_ID_PROVIDER_CONNECTION = "id_provider_connection";
  @SerializedName(SERIALIZED_NAME_ID_PROVIDER_CONNECTION)
  private Integer idProviderConnection;

  public static final String SERIALIZED_NAME_DEVELOPER_ID = "developer_id";
  @SerializedName(SERIALIZED_NAME_DEVELOPER_ID)
  private Integer developerId;

  public static final String SERIALIZED_NAME_TENANT_ID = "tenant_id";
  @SerializedName(SERIALIZED_NAME_TENANT_ID)
  private Integer tenantId;

  public static final String SERIALIZED_NAME_LAST_LOGIN_IPADDR = "last_login_ipaddr";
  @SerializedName(SERIALIZED_NAME_LAST_LOGIN_IPADDR)
  private String lastLoginIpaddr;

  public static final String SERIALIZED_NAME_LAST_LOGIN_TIME = "last_login_time";
  @SerializedName(SERIALIZED_NAME_LAST_LOGIN_TIME)
  private LocalDateTime lastLoginTime = null;

  public static final String SERIALIZED_NAME_TIME_CREATED = "time_created";
  @SerializedName(SERIALIZED_NAME_TIME_CREATED)
  private LocalDateTime timeCreated = null;

  public static final String SERIALIZED_NAME_TIME_MODIFIED = "time_modified";
  @SerializedName(SERIALIZED_NAME_TIME_MODIFIED)
  private Integer timeModified;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private String status;

  public UserDetailRet() {
  }
   /**
   * 用户id标识
   * @return id
  **/
  @javax.annotation.Nullable
  public Integer getId() {
    return id;
  }


  public void setId(Integer id) {
    this.id = id;
  }

   /**
   * 用户名，唯一
   * @return username
  **/
  @javax.annotation.Nullable
  public String getUsername() {
    return username;
  }


  public void setUsername(String username) {
    this.username = username;
  }

   /**
   * 密码
   * @return password
  **/
  @javax.annotation.Nullable
  public String getPassword() {
    return password;
  }


  public void setPassword(String password) {
    this.password = password;
  }

   /**
   * 显示名称
   * @return displayName
  **/
  @javax.annotation.Nullable
  public String getDisplayName() {
    return displayName;
  }


  public void setDisplayName(String displayName) {
    this.displayName = displayName;
  }

   /**
   * 名
   * @return firstname
  **/
  @javax.annotation.Nullable
  public String getFirstname() {
    return firstname;
  }


  public void setFirstname(String firstname) {
    this.firstname = firstname;
  }

   /**
   * 姓
   * @return lastname
  **/
  @javax.annotation.Nullable
  public String getLastname() {
    return lastname;
  }


  public void setLastname(String lastname) {
    this.lastname = lastname;
  }

   /**
   * 真实姓名
   * @return realname
  **/
  @javax.annotation.Nullable
  public String getRealname() {
    return realname;
  }


  public void setRealname(String realname) {
    this.realname = realname;
  }

   /**
   * 拼音
   * @return pinyin
  **/
  @javax.annotation.Nullable
  public String getPinyin() {
    return pinyin;
  }


  public void setPinyin(String pinyin) {
    this.pinyin = pinyin;
  }

   /**
   * 昵称
   * @return nickname
  **/
  @javax.annotation.Nullable
  public String getNickname() {
    return nickname;
  }


  public void setNickname(String nickname) {
    this.nickname = nickname;
  }

   /**
   * 用户类型
   * @return userType
  **/
  @javax.annotation.Nullable
  public String getUserType() {
    return userType;
  }


  public void setUserType(String userType) {
    this.userType = userType;
  }

   /**
   * 手机
   * @return mobile
  **/
  @javax.annotation.Nullable
  public String getMobile() {
    return mobile;
  }


  public void setMobile(String mobile) {
    this.mobile = mobile;
  }

   /**
   * 邮箱
   * @return email
  **/
  @javax.annotation.Nullable
  public String getEmail() {
    return email;
  }


  public void setEmail(String email) {
    this.email = email;
  }

   /**
   * 性别
   * @return gender
  **/
  @javax.annotation.Nullable
  public String getGender() {
    return gender;
  }


  public void setGender(String gender) {
    this.gender = gender;
  }

   /**
   * 证件类型
   * @return certType
  **/
  @javax.annotation.Nullable
  public String getCertType() {
    return certType;
  }


  public void setCertType(String certType) {
    this.certType = certType;
  }

   /**
   * 证件号
   * @return certNumber
  **/
  @javax.annotation.Nullable
  public String getCertNumber() {
    return certNumber;
  }


  public void setCertNumber(String certNumber) {
    this.certNumber = certNumber;
  }

   /**
   * 区域
   * @return region
  **/
  @javax.annotation.Nullable
  public String getRegion() {
    return region;
  }


  public void setRegion(String region) {
    this.region = region;
  }

   /**
   * 加入时间
   * @return workTime
  **/
  @javax.annotation.Nullable
  public LocalDate getWorkTime() {
    return workTime;
  }


  public void setWorkTime(LocalDate workTime) {
    this.workTime = workTime;
  }

   /**
   * 职位
   * @return workTitle
  **/
  @javax.annotation.Nullable
  public String getWorkTitle() {
    return workTitle;
  }


  public void setWorkTitle(String workTitle) {
    this.workTitle = workTitle;
  }

   /**
   * 扩展信息，json对象{\&quot;age\&quot;: 18, \&quot;love\&quot;: \&quot;足球\&quot;}
   * @return extProp
  **/
  @javax.annotation.Nullable
  public Object getExtProp() {
    return extProp;
  }


  public void setExtProp(Object extProp) {
    this.extProp = extProp;
  }

   /**
   * arn
   * @return arn
  **/
  @javax.annotation.Nullable
  public String getArn() {
    return arn;
  }


  public void setArn(String arn) {
    this.arn = arn;
  }

   /**
   * 身份源ID
   * @return idProviderConnection
  **/
  @javax.annotation.Nullable
  public Integer getIdProviderConnection() {
    return idProviderConnection;
  }


  public void setIdProviderConnection(Integer idProviderConnection) {
    this.idProviderConnection = idProviderConnection;
  }

   /**
   * 开发者id
   * @return developerId
  **/
  @javax.annotation.Nullable
  public Integer getDeveloperId() {
    return developerId;
  }


  public void setDeveloperId(Integer developerId) {
    this.developerId = developerId;
  }

   /**
   * 租户id
   * @return tenantId
  **/
  @javax.annotation.Nullable
  public Integer getTenantId() {
    return tenantId;
  }


  public void setTenantId(Integer tenantId) {
    this.tenantId = tenantId;
  }

   /**
   * 上次登录IP
   * @return lastLoginIpaddr
  **/
  @javax.annotation.Nullable
  public String getLastLoginIpaddr() {
    return lastLoginIpaddr;
  }


  public void setLastLoginIpaddr(String lastLoginIpaddr) {
    this.lastLoginIpaddr = lastLoginIpaddr;
  }

   /**
   * 上次登录时间
   * @return lastLoginTime
  **/
  @javax.annotation.Nullable
  public LocalDateTime getLastLoginTime() {
    return lastLoginTime;
  }


  public void setLastLoginTime(LocalDateTime lastLoginTime) {
    this.lastLoginTime = lastLoginTime;
  }

   /**
   * 创建时间
   * @return timeCreated
  **/
  @javax.annotation.Nullable
  public LocalDateTime getTimeCreated() {
    return timeCreated;
  }


  public void setTimeCreated(LocalDateTime timeCreated) {
    this.timeCreated = timeCreated;
  }

   /**
   * 修改时间
   * @return timeModified
  **/
  @javax.annotation.Nullable
  public Integer getTimeModified() {
    return timeModified;
  }


  public void setTimeModified(Integer timeModified) {
    this.timeModified = timeModified;
  }

   /**
   * 状态：1正常，0禁用
   * @return status
  **/
  @javax.annotation.Nullable
  public String getStatus() {
    return status;
  }


  public void setStatus(String status) {
    this.status = status;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UserDetailRet userDetailRet = (UserDetailRet) o;
    return Objects.equals(this.id, userDetailRet.id) &&
        Objects.equals(this.username, userDetailRet.username) &&
        Objects.equals(this.password, userDetailRet.password) &&
        Objects.equals(this.displayName, userDetailRet.displayName) &&
        Objects.equals(this.firstname, userDetailRet.firstname) &&
        Objects.equals(this.lastname, userDetailRet.lastname) &&
        Objects.equals(this.realname, userDetailRet.realname) &&
        Objects.equals(this.pinyin, userDetailRet.pinyin) &&
        Objects.equals(this.nickname, userDetailRet.nickname) &&
        Objects.equals(this.userType, userDetailRet.userType) &&
        Objects.equals(this.mobile, userDetailRet.mobile) &&
        Objects.equals(this.email, userDetailRet.email) &&
        Objects.equals(this.gender, userDetailRet.gender) &&
        Objects.equals(this.certType, userDetailRet.certType) &&
        Objects.equals(this.certNumber, userDetailRet.certNumber) &&
        Objects.equals(this.region, userDetailRet.region) &&
        Objects.equals(this.workTime, userDetailRet.workTime) &&
        Objects.equals(this.workTitle, userDetailRet.workTitle) &&
        Objects.equals(this.extProp, userDetailRet.extProp) &&
        Objects.equals(this.arn, userDetailRet.arn) &&
        Objects.equals(this.idProviderConnection, userDetailRet.idProviderConnection) &&
        Objects.equals(this.developerId, userDetailRet.developerId) &&
        Objects.equals(this.tenantId, userDetailRet.tenantId) &&
        Objects.equals(this.lastLoginIpaddr, userDetailRet.lastLoginIpaddr) &&
        Objects.equals(this.lastLoginTime, userDetailRet.lastLoginTime) &&
        Objects.equals(this.timeCreated, userDetailRet.timeCreated) &&
        Objects.equals(this.timeModified, userDetailRet.timeModified) &&
        Objects.equals(this.status, userDetailRet.status);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, username, password, displayName, firstname, lastname, realname, pinyin, nickname, userType, mobile, email, gender, certType, certNumber, region, workTime, workTitle, extProp, arn, idProviderConnection, developerId, tenantId, lastLoginIpaddr, lastLoginTime, timeCreated, timeModified, status);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UserDetailRet {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    username: ").append(toIndentedString(username)).append("\n");
    sb.append("    password: ").append(toIndentedString(password)).append("\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    firstname: ").append(toIndentedString(firstname)).append("\n");
    sb.append("    lastname: ").append(toIndentedString(lastname)).append("\n");
    sb.append("    realname: ").append(toIndentedString(realname)).append("\n");
    sb.append("    pinyin: ").append(toIndentedString(pinyin)).append("\n");
    sb.append("    nickname: ").append(toIndentedString(nickname)).append("\n");
    sb.append("    userType: ").append(toIndentedString(userType)).append("\n");
    sb.append("    mobile: ").append(toIndentedString(mobile)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    gender: ").append(toIndentedString(gender)).append("\n");
    sb.append("    certType: ").append(toIndentedString(certType)).append("\n");
    sb.append("    certNumber: ").append(toIndentedString(certNumber)).append("\n");
    sb.append("    region: ").append(toIndentedString(region)).append("\n");
    sb.append("    workTime: ").append(toIndentedString(workTime)).append("\n");
    sb.append("    workTitle: ").append(toIndentedString(workTitle)).append("\n");
    sb.append("    extProp: ").append(toIndentedString(extProp)).append("\n");
    sb.append("    arn: ").append(toIndentedString(arn)).append("\n");
    sb.append("    idProviderConnection: ").append(toIndentedString(idProviderConnection)).append("\n");
    sb.append("    developerId: ").append(toIndentedString(developerId)).append("\n");
    sb.append("    tenantId: ").append(toIndentedString(tenantId)).append("\n");
    sb.append("    lastLoginIpaddr: ").append(toIndentedString(lastLoginIpaddr)).append("\n");
    sb.append("    lastLoginTime: ").append(toIndentedString(lastLoginTime)).append("\n");
    sb.append("    timeCreated: ").append(toIndentedString(timeCreated)).append("\n");
    sb.append("    timeModified: ").append(toIndentedString(timeModified)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("id");
    openapiFields.add("username");
    openapiFields.add("password");
    openapiFields.add("display_name");
    openapiFields.add("firstname");
    openapiFields.add("lastname");
    openapiFields.add("realname");
    openapiFields.add("pinyin");
    openapiFields.add("nickname");
    openapiFields.add("user_type");
    openapiFields.add("mobile");
    openapiFields.add("email");
    openapiFields.add("gender");
    openapiFields.add("cert_type");
    openapiFields.add("cert_number");
    openapiFields.add("region");
    openapiFields.add("work_time");
    openapiFields.add("work_title");
    openapiFields.add("ext_prop");
    openapiFields.add("arn");
    openapiFields.add("id_provider_connection");
    openapiFields.add("developer_id");
    openapiFields.add("tenant_id");
    openapiFields.add("last_login_ipaddr");
    openapiFields.add("last_login_time");
    openapiFields.add("time_created");
    openapiFields.add("time_modified");
    openapiFields.add("status");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to UserDetailRet
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!UserDetailRet.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in UserDetailRet is not found in the empty JSON string", UserDetailRet.openapiRequiredFields.toString()));
        }
      }

        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("username") != null && !jsonObj.get("username").isJsonNull()) && !jsonObj.get("username").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `username` to be a primitive type in the JSON string but got `%s`", jsonObj.get("username").toString()));
      }
      if ((jsonObj.get("password") != null && !jsonObj.get("password").isJsonNull()) && !jsonObj.get("password").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `password` to be a primitive type in the JSON string but got `%s`", jsonObj.get("password").toString()));
      }
      if ((jsonObj.get("display_name") != null && !jsonObj.get("display_name").isJsonNull()) && !jsonObj.get("display_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `display_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("display_name").toString()));
      }
      if ((jsonObj.get("firstname") != null && !jsonObj.get("firstname").isJsonNull()) && !jsonObj.get("firstname").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `firstname` to be a primitive type in the JSON string but got `%s`", jsonObj.get("firstname").toString()));
      }
      if ((jsonObj.get("lastname") != null && !jsonObj.get("lastname").isJsonNull()) && !jsonObj.get("lastname").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `lastname` to be a primitive type in the JSON string but got `%s`", jsonObj.get("lastname").toString()));
      }
      if ((jsonObj.get("realname") != null && !jsonObj.get("realname").isJsonNull()) && !jsonObj.get("realname").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `realname` to be a primitive type in the JSON string but got `%s`", jsonObj.get("realname").toString()));
      }
      if ((jsonObj.get("pinyin") != null && !jsonObj.get("pinyin").isJsonNull()) && !jsonObj.get("pinyin").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `pinyin` to be a primitive type in the JSON string but got `%s`", jsonObj.get("pinyin").toString()));
      }
      if ((jsonObj.get("nickname") != null && !jsonObj.get("nickname").isJsonNull()) && !jsonObj.get("nickname").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `nickname` to be a primitive type in the JSON string but got `%s`", jsonObj.get("nickname").toString()));
      }
      if ((jsonObj.get("user_type") != null && !jsonObj.get("user_type").isJsonNull()) && !jsonObj.get("user_type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `user_type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("user_type").toString()));
      }
      if ((jsonObj.get("mobile") != null && !jsonObj.get("mobile").isJsonNull()) && !jsonObj.get("mobile").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `mobile` to be a primitive type in the JSON string but got `%s`", jsonObj.get("mobile").toString()));
      }
      if ((jsonObj.get("email") != null && !jsonObj.get("email").isJsonNull()) && !jsonObj.get("email").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `email` to be a primitive type in the JSON string but got `%s`", jsonObj.get("email").toString()));
      }
      if ((jsonObj.get("gender") != null && !jsonObj.get("gender").isJsonNull()) && !jsonObj.get("gender").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `gender` to be a primitive type in the JSON string but got `%s`", jsonObj.get("gender").toString()));
      }
      if ((jsonObj.get("cert_type") != null && !jsonObj.get("cert_type").isJsonNull()) && !jsonObj.get("cert_type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `cert_type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("cert_type").toString()));
      }
      if ((jsonObj.get("cert_number") != null && !jsonObj.get("cert_number").isJsonNull()) && !jsonObj.get("cert_number").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `cert_number` to be a primitive type in the JSON string but got `%s`", jsonObj.get("cert_number").toString()));
      }
      if ((jsonObj.get("region") != null && !jsonObj.get("region").isJsonNull()) && !jsonObj.get("region").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `region` to be a primitive type in the JSON string but got `%s`", jsonObj.get("region").toString()));
      }
      if ((jsonObj.get("work_title") != null && !jsonObj.get("work_title").isJsonNull()) && !jsonObj.get("work_title").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `work_title` to be a primitive type in the JSON string but got `%s`", jsonObj.get("work_title").toString()));
      }
      if ((jsonObj.get("arn") != null && !jsonObj.get("arn").isJsonNull()) && !jsonObj.get("arn").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `arn` to be a primitive type in the JSON string but got `%s`", jsonObj.get("arn").toString()));
      }
      if ((jsonObj.get("last_login_ipaddr") != null && !jsonObj.get("last_login_ipaddr").isJsonNull()) && !jsonObj.get("last_login_ipaddr").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `last_login_ipaddr` to be a primitive type in the JSON string but got `%s`", jsonObj.get("last_login_ipaddr").toString()));
      }
      if ((jsonObj.get("status") != null && !jsonObj.get("status").isJsonNull()) && !jsonObj.get("status").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `status` to be a primitive type in the JSON string but got `%s`", jsonObj.get("status").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!UserDetailRet.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'UserDetailRet' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<UserDetailRet> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(UserDetailRet.class));

       return (TypeAdapter<T>) new TypeAdapter<UserDetailRet>() {
           @Override
           public void write(JsonWriter out, UserDetailRet value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public UserDetailRet read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of UserDetailRet given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of UserDetailRet
  * @throws IOException if the JSON string is invalid with respect to UserDetailRet
  */
  public static UserDetailRet fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, UserDetailRet.class);
  }

 /**
  * Convert an instance of UserDetailRet to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

