/*
 * IDMesh-Dev
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.4.7
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package cn.idmesh.api;

import cn.idmesh.ApiClient;
import cn.idmesh.ApiException;
import cn.idmesh.model.CommonRet;
import cn.idmesh.model.CreateUserReq;
import cn.idmesh.model.CreateUserStoredCredentialReq;
import cn.idmesh.model.ModifyUserReq;
import cn.idmesh.model.UserDetailRet;
import cn.idmesh.model.UserStoredCredentialWithPage;
import cn.idmesh.model.UserWithPage;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * API tests for UserApi
 */
@Disabled
public class UserApiTest {

    private final ApiClient apiClient = new ApiClient("http://service-gate.api.dev.idmesh.site", "u4X5vTGPH4NCdNTylSYn1JHe", "BkCCUZLVVR9wSi2aiYTOYUZDKps7xgQT");
    private final UserApi api = new UserApi(apiClient);

    /**
     * 查询用户列表
     *
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void callListTest() throws ApiException {
        Integer pageSize = null;
        Integer pageNum = null;
        String searchType = null;
        String keyword = null;
        String timeModifiedFrom = null;
        String timeModifiedTo = null;
        UserWithPage response = api.callList()
                .pageSize(pageSize)
                .pageNum(pageNum)
                .searchType(searchType)
                .keyword(keyword)
                .timeModifiedFrom(timeModifiedFrom)
                .timeModifiedTo(timeModifiedTo)
                .execute();
        // TODO: test validations
    }

    /**
     * 创建用户
     *
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createTest() throws ApiException {
        String contentType = null;
        CreateUserReq createUserReq = null;
        CommonRet response = api.create(contentType)
                .createUserReq(createUserReq)
                .execute();
        // TODO: test validations
    }

    /**
     * 创建用户存储凭证
     *
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createStoreCredentialTest() throws ApiException {
        String contentType = null;
        CreateUserStoredCredentialReq createUserStoredCredentialReq = null;
        CommonRet response = api.createStoreCredential(contentType)
                .createUserStoredCredentialReq(createUserStoredCredentialReq)
                .execute();
        // TODO: test validations
    }

    /**
     * 删除用户
     *
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteTest() throws ApiException {
        String id = null;
        String contentType = null;
        CommonRet response = api.delete(id, contentType)
                .execute();
        // TODO: test validations
    }

    /**
     * 查询用户详情
     *
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getTest() throws ApiException {
        String id = null;
        UserDetailRet response = api.get(id)
                .execute();
        // TODO: test validations
    }

    /**
     * 查询用户存储凭证列表
     *
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getStoredCredentialsTest() throws ApiException {
        String contentType = null;
        Integer userId = null;
        String providerCode = null;
        Integer idpConfigId = null;
        String id1 = null;
        String id2 = null;
        String metadata = null;
        String status = null;
        String username = null;
        String displayName = null;
        Integer pageSize = null;
        Integer pageNum = null;
        UserStoredCredentialWithPage response = api.getStoredCredentials(contentType)
                .userId(userId)
                .providerCode(providerCode)
                .idpConfigId(idpConfigId)
                .id1(id1)
                .id2(id2)
                .metadata(metadata)
                .status(status)
                .username(username)
                .displayName(displayName)
                .pageSize(pageSize)
                .pageNum(pageNum)
                .execute();
        // TODO: test validations
    }

    /**
     * 编辑用户
     *
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void modifyTest() throws ApiException {
        String id = null;
        String contentType = null;
        ModifyUserReq modifyUserReq = null;
        CommonRet response = api.modify(id, contentType)
                .modifyUserReq(modifyUserReq)
                .execute();
        // TODO: test validations
    }

}
