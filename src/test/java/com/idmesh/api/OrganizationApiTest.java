/*
 * IDMesh-Dev
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.4.7
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.idmesh.api;

import com.idmesh.ApiClient;
import com.idmesh.ApiException;
import com.idmesh.model.BadRequest;
import com.idmesh.model.CommonRet;
import com.idmesh.model.CreateNodeRequest;
import com.idmesh.model.CreateOrganizationReq;
import com.idmesh.model.DeleteNodeMemberReq;
import com.idmesh.model.GetMembers200ResponseInner;
import com.idmesh.model.ModifyNodeMemberReq;
import com.idmesh.model.ModifyOrganizationNodeReq;
import com.idmesh.model.ModifyOrganizationReq;
import com.idmesh.model.NodeMemberWithPage;
import com.idmesh.model.OrganizationTree;
import com.idmesh.model.TreeNode;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for OrganizationApi
 */
@Disabled
public class OrganizationApiTest {

    private final ApiClient apiClient = new ApiClient("http://service-gate.api.dev.idmesh.site", "u4X5vTGPH4NCdNTylSYn1JHe", "BkCCUZLVVR9wSi2aiYTOYUZDKps7xgQT");
    private final OrganizationApi api = new OrganizationApi(apiClient);

    /**
     * 创建节点
     *
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createNodeTest() throws ApiException {
        String contentType = null;
        CreateNodeRequest createNodeRequest = null;
        CommonRet response = api.createNode(contentType)
                .createNodeRequest(createNodeRequest)
                .execute();
        // TODO: test validations
    }

    /**
     * 创建组织关系
     *
     * 创建组织关系的元数据，同时创建根节点
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createOrganizationTest() throws ApiException {
        String contentType = null;
        CreateOrganizationReq createOrganizationReq = null;
        CommonRet response = api.createOrganization(contentType)
                .createOrganizationReq(createOrganizationReq)
                .execute();
        // TODO: test validations
    }

    /**
     * 从节点移除用户
     *
     * 移除用户,uri参数中的ID和json中的参数，至少有其一
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteMembersTest() throws ApiException {
        String contentType = null;
        DeleteNodeMemberReq deleteNodeMemberReq = null;
        CommonRet response = api.deleteMembers(contentType)
                .deleteNodeMemberReq(deleteNodeMemberReq)
                .execute();
        // TODO: test validations
    }

    /**
     * 删除节点
     *
     * 如果该节点有子节点则不可删除，需要先删除所有子节点。
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteNodeTest() throws ApiException {
        String id = null;
        String objectCode = null;
        String contentType = null;
        CommonRet response = api.deleteNode(id, objectCode, contentType)
                .execute();
        // TODO: test validations
    }

    /**
     * 删除组织关系
     *
     * 如果该组织关系有子节点则不可删
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteOrganizationTest() throws ApiException {
        String id = null;
        String contentType = null;
        CommonRet response = api.deleteOrganization(id, contentType)
                .execute();
        // TODO: test validations
    }

    /**
     * 获取子节点列表
     *
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getChildrenNodesTest() throws ApiException {
        String id = null;
        String mode = null;
        String objectCode = null;
        List<TreeNode> response = api.getChildrenNodes(id, mode, objectCode)
                .execute();
        // TODO: test validations
    }

    /**
     * 获取与用户关联的组织关系列表
     *
     * 根据用户id获取与用户关联的组织关系列表
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getMembersTest() throws ApiException {
        String userId = null;
        String objectCode = null;
        List<GetMembers200ResponseInner> response = api.getMembers(userId)
                .objectCode(objectCode)
                .execute();
        // TODO: test validations
    }

    /**
     * 查询节点信息
     *
     * 根据ID查询节点信息
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getNodeTest() throws ApiException {
        String id = null;
        TreeNode response = api.getNode(id)
                .execute();
        // TODO: test validations
    }

    /**
     * 获取成员信息列表
     *
     * 根据组织节点ID获取成员信息列表
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getNodeMembersTest() throws ApiException {
        String id = null;
        String relationType = null;
        String isDefault = null;
        String displayName = null;
        String username = null;
        String mode = null;
        Integer pageNum = null;
        Integer pageSize = null;
        String pageSort = null;
        NodeMemberWithPage response = api.getNodeMembers(id)
                .relationType(relationType)
                .isDefault(isDefault)
                .displayName(displayName)
                .username(username)
                .mode(mode)
                .pageNum(pageNum)
                .pageSize(pageSize)
                .pageSort(pageSort)
                .execute();
        // TODO: test validations
    }

    /**
     * 查询父节点
     *
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getNodeParentTest() throws ApiException {
        String id = null;
        List<TreeNode> response = api.getNodeParent(id)
                .execute();
        // TODO: test validations
    }

    /**
     * 查询节点信息列表
     *
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getNodesTest() throws ApiException {
        String objectCode = null;
        String name = null;
        String code = null;
        String tag = null;
        String timeModifiedFrom = null;
        String timeModifiedTo = null;
        String ids = null;
        List<TreeNode> response = api.getNodes(objectCode)
                .name(name)
                .code(code)
                .tag(tag)
                .timeModifiedFrom(timeModifiedFrom)
                .timeModifiedTo(timeModifiedTo)
                .ids(ids)
                .execute();
        // TODO: test validations
    }

    /**
     * 获取组织关系基本信息
     *
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getOrganizationTest() throws ApiException {
        String id = null;
        String code = null;
        List<OrganizationTree> response = api.getOrganization(id, code)
                .execute();
        // TODO: test validations
    }

    /**
     * 获取组织关系列表
     *
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getOrganizationsTest() throws ApiException {
        String type = null;
        List<OrganizationTree> response = api.getOrganizations()
                .type(type)
                .execute();
        // TODO: test validations
    }

    /**
     * 更新用户节点
     *
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateMemberTest() throws ApiException {
        String id = null;
        String contentType = null;
        ModifyNodeMemberReq modifyNodeMemberReq = null;
        CommonRet response = api.updateMember(id, contentType)
                .modifyNodeMemberReq(modifyNodeMemberReq)
                .execute();
        // TODO: test validations
    }

    /**
     * 编辑节点
     *
     *  移动节点修改parent_id 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateNodeTest() throws ApiException {
        String id = null;
        String contentType = null;
        ModifyOrganizationNodeReq modifyOrganizationNodeReq = null;
        CommonRet response = api.updateNode(id, contentType)
                .modifyOrganizationNodeReq(modifyOrganizationNodeReq)
                .execute();
        // TODO: test validations
    }

    /**
     * 修改组织关系基本信息
     *
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateOrganizationTest() throws ApiException {
        String id = null;
        String contentType = null;
        ModifyOrganizationReq modifyOrganizationReq = null;
        CommonRet response = api.updateOrganization(id, contentType)
                .modifyOrganizationReq(modifyOrganizationReq)
                .execute();
        // TODO: test validations
    }

}
